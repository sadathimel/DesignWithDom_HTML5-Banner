/**
 * @license almond 0.3.3 Copyright jQuery Foundation and other contributors.
 * Released under MIT license, http://github.com/requirejs/almond/LICENSE
 */

/*! audio5 2018-03-13 */

!(function () {
  var t, e, i;
  !(function (s) {
    function n(t, e) {
      return x.call(t, e);
    }
    function o(t, e) {
      var i,
        s,
        n,
        o,
        r,
        a,
        l,
        h,
        d,
        c,
        u,
        p,
        f = e && e.split("/"),
        m = b.map,
        y = (m && m["*"]) || {};
      if (t) {
        for (
          t = t.split("/"),
            r = t.length - 1,
            b.nodeIdCompat && C.test(t[r]) && (t[r] = t[r].replace(C, "")),
            "." === t[0].charAt(0) &&
              f &&
              ((p = f.slice(0, f.length - 1)), (t = p.concat(t))),
            d = 0;
          d < t.length;
          d++
        )
          if ("." === (u = t[d])) t.splice(d, 1), (d -= 1);
          else if (".." === u) {
            if (0 === d || (1 === d && ".." === t[2]) || ".." === t[d - 1])
              continue;
            d > 0 && (t.splice(d - 1, 2), (d -= 2));
          }
        t = t.join("/");
      }
      if ((f || y) && m) {
        for (i = t.split("/"), d = i.length; d > 0; d -= 1) {
          if (((s = i.slice(0, d).join("/")), f))
            for (c = f.length; c > 0; c -= 1)
              if ((n = m[f.slice(0, c).join("/")]) && (n = n[s])) {
                (o = n), (a = d);
                break;
              }
          if (o) break;
          !l && y && y[s] && ((l = y[s]), (h = d));
        }
        !o && l && ((o = l), (a = h)),
          o && (i.splice(0, a, o), (t = i.join("/")));
      }
      return t;
    }
    function r(t, e) {
      return function () {
        var i = E.call(arguments, 0);
        return (
          "string" != typeof i[0] && 1 === i.length && i.push(null),
          f.apply(s, i.concat([t, e]))
        );
      };
    }
    function a(t) {
      return function (e) {
        return o(e, t);
      };
    }
    function l(t) {
      return function (e) {
        g[t] = e;
      };
    }
    function h(t) {
      if (n(v, t)) {
        var e = v[t];
        delete v[t], (w[t] = !0), p.apply(s, e);
      }
      if (!n(g, t) && !n(w, t)) throw new Error("No " + t);
      return g[t];
    }
    function d(t) {
      var e,
        i = t ? t.indexOf("!") : -1;
      return (
        i > -1 && ((e = t.substring(0, i)), (t = t.substring(i + 1, t.length))),
        [e, t]
      );
    }
    function c(t) {
      return t ? d(t) : [];
    }
    function u(t) {
      return function () {
        return (b && b.config && b.config[t]) || {};
      };
    }
    var p,
      f,
      m,
      y,
      g = {},
      v = {},
      b = {},
      w = {},
      x = Object.prototype.hasOwnProperty,
      E = [].slice,
      C = /\.js$/;
    (m = function (t, e) {
      var i,
        s = d(t),
        n = s[0],
        r = e[1];
      return (
        (t = s[1]),
        n && ((n = o(n, r)), (i = h(n))),
        n
          ? (t = i && i.normalize ? i.normalize(t, a(r)) : o(t, r))
          : ((t = o(t, r)),
            (s = d(t)),
            (n = s[0]),
            (t = s[1]),
            n && (i = h(n))),
        { f: n ? n + "!" + t : t, n: t, pr: n, p: i }
      );
    }),
      (y = {
        require: function (t) {
          return r(t);
        },
        exports: function (t) {
          var e = g[t];
          return void 0 !== e ? e : (g[t] = {});
        },
        module: function (t) {
          return { id: t, uri: "", exports: g[t], config: u(t) };
        },
      }),
      (p = function (t, e, i, o) {
        var a,
          d,
          u,
          p,
          f,
          b,
          x,
          E = [],
          C = typeof i;
        if (((o = o || t), (b = c(o)), "undefined" === C || "function" === C)) {
          for (
            e = !e.length && i.length ? ["require", "exports", "module"] : e,
              f = 0;
            f < e.length;
            f += 1
          )
            if (((p = m(e[f], b)), "require" === (d = p.f)))
              E[f] = y.require(t);
            else if ("exports" === d) (E[f] = y.exports(t)), (x = !0);
            else if ("module" === d) a = E[f] = y.module(t);
            else if (n(g, d) || n(v, d) || n(w, d)) E[f] = h(d);
            else {
              if (!p.p) throw new Error(t + " missing " + d);
              p.p.load(p.n, r(o, !0), l(d), {}), (E[f] = g[d]);
            }
          (u = i ? i.apply(g[t], E) : void 0),
            t &&
              (a && a.exports !== s && a.exports !== g[t]
                ? (g[t] = a.exports)
                : (u === s && x) || (g[t] = u));
        } else t && (g[t] = i);
      }),
      (t =
        e =
        f =
          function (t, e, i, n, o) {
            if ("string" == typeof t) return y[t] ? y[t](e) : h(m(t, c(e)).f);
            if (!t.splice) {
              if (((b = t), b.deps && f(b.deps, b.callback), !e)) return;
              e.splice ? ((t = e), (e = i), (i = null)) : (t = s);
            }
            return (
              (e = e || function () {}),
              "function" == typeof i && ((i = n), (n = o)),
              n
                ? p(s, t, e, i)
                : setTimeout(function () {
                    p(s, t, e, i);
                  }, 4),
              f
            );
          }),
      (f.config = function (t) {
        return f(t);
      }),
      (t._defined = g),
      (i = function (t, e, i) {
        if ("string" != typeof t)
          throw new Error(
            "See almond README: incorrect module build, no module name"
          );
        e.splice || ((i = e), (e = [])),
          n(g, t) || n(v, t) || (v[t] = [t, e, i]);
      }),
      (i.amd = { jQuery: !0 });
  })(),
    i("libs/almond", function () {}),
    i("rs/utils/ObjectUtil", [], function () {
      "use strict";
      var t = {
        merge: function (t, e, i) {
          for (var s in t)
            "[object Object]" === Object.prototype.toString.call(t[s])
              ? (void 0 === e[s] && (e[s] = {}), this.merge(t[s], e[s]))
              : (e[s] = t[s]);
          return e;
        },
        clone: function (e, i) {
          var s = {};
          return t.merge(e, s, i), s;
        },
      };
      return t;
    }),
    i("rs/utils/BrowserUtil", [], function () {
      "use strict";
      var t = {
        bp: {
          XS: 0,
          SM: 576,
          MD: 768,
          LG: 992,
          XL: 1200,
          XXL: 1500,
          X3L: 1900,
          X4L: 2e3,
          X5L: 3e3,
        },
        computeStyle: function (t, e, i) {
          return (
            void 0 === i && (i = "px"),
            parseFloat(getComputedStyle(t)[e].replace(i, ""))
          );
        },
        css: function (t, e) {
          for (var i in e) t.style[i] = e[i];
        },
        getPrefix: function () {
          return (
            t.pf ||
              (window.opera || navigator.userAgent.indexOf(" OPR/") >= 0
                ? ((t.pf = "Webkit"), (t.browserName = "Opera"))
                : "undefined" != typeof InstallTrigger
                ? ((t.pf = "Moz"), (t.browserName = "Firefox"))
                : window.safari
                ? ((t.pf = "Webkit"), (t.browserName = "Safari"))
                : window.chrome
                ? ((t.pf = "Webkit"), (t.browserName = "Chrome"))
                : document.documentMode
                ? ((t.pf = "ms"), (t.browserName = "MSIE"))
                : /Edge/.test(navigator.userAgent)
                ? ((t.pf = "ms"), (t.browserName = "MSIE"))
                : ((t.pf = "Webkit"), (t.browserName = "Safari")),
              "Webkit" === t.pf ? (t.ps = "") : (t.ps = "px"),
              "" !== t.pf
                ? (t.csspf = "-" + t.pf.toLowerCase() + "-")
                : (t.csspf = ""),
              console.log(t.pf)),
            t.pf
          );
        },
        getMouseTouchEvents: function () {
          return this.isMobile()
            ? { mdown: "touchstart", mmove: "touchmove", mup: "touchend" }
            : { mdown: "mousedown", mmove: "mousemove", mup: "mouseup" };
        },
        isMobile: function () {
          return (
            void 0 === t.imb &&
              (t.imb = null === document.createElement("span").ontouchstart),
            t.imb
          );
        },
        goFullscreen: function (e) {
          var i = t.isFullscreenSupported();
          return (
            !!i &&
            ("" === i ? e.requestFullScreen() : e[i + "RequestFullScreen"]())
          );
        },
        exitFullscreen: function (e) {
          var i = t.isFullscreenSupported();
          return (
            !!i &&
            !!t.isFullscreen() &&
            ("" === i
              ? document.cancelFullScreen()
              : document[i + "CancelFullScreen"]())
          );
        },
        fullScreenCallback: function (e, i, s) {
          var n = t.isFullscreenSupported();
          if (!n) return !1;
          var o = n + "fullscreenchange";
          document.addEventListener(o, i);
        },
        isFullscreen: function () {
          var e = t.isFullscreenSupported();
          if (!e) return !1;
          switch (e) {
            case "":
              return document.fullScreen;
            case "webkit":
              return document.webkitIsFullScreen;
            default:
              return document[e + "FullScreen"];
          }
        },
        isFullscreenSupported: function () {
          var e = t.pf.toLowerCase();
          return void 0 !== document.cancelFullScreen
            ? ""
            : void 0 !== document[e + "CancelFullScreen"] && e;
        },
      };
      return t;
    }),
    i("rs/ui/RingPreloader", ["rs/utils/ObjectUtil"], function (t) {
      "use strict";
      function e(e) {
        (this.dopt = { size: 40, borderWidth: 6, borderColor: "#AAA" }),
          t.merge(e, this.dopt),
          this.build();
      }
      return (
        (e.prototype.build = function () {
          var t = this.dopt,
            e = (this.el = document.createElement("div"));
          (e.className = "rs-ringpreloader"),
            (e.innerHTML =
              "<div class='lds-ring'><div></div><div></div><div></div><div></div></div>"),
            (e.style.marginLeft = e.style.marginTop = 0.5 * -t.size + "px");
          for (var i = e.firstChild.children, s = 0; s < i.length; s++) {
            var n = i[s].style;
            (n.width = n.height = t.size + "px"),
              (n.borderWidth = t.borderWidth + "px"),
              (n.borderTopColor = t.borderColor);
          }
        }),
        (e.prototype.show = function () {
          this.el.style.display = "block";
        }),
        (e.prototype.hide = function () {
          this.el.style.display = "none";
        }),
        e
      );
    }),
    i("rs/media/MediaViewerEvent", [], function () {
      return { TARGET: "mvtarget", EXIT: "mvexit" };
    }),
    i("rs/media/MediaViewerThumbnail", ["rs/utils/BrowserUtil"], function (t) {
      "use strict";
      function e(e, i) {
        (s = t.getMouseTouchEvents().mup), (this.mviewer = e), this.build(i);
      }
      function i(t) {
        var e = t.target.com;
        e.targetItem.call(e, t);
      }
      var s,
        n = { AJAX: 0, AUDIO: 1, EMBED: 2, INLINE: 3, PHOTO: 4, VIDEO: 5 };
      return (
        (e.prototype.build = function (t) {
          this.id = t.id;
          var e = (this.el = document.createElement("li"));
          if (
            ((e.com = this),
            (e.className = "rs-mediaviewer-thumbnail"),
            (e.style.display = "block"),
            (e.style.width = e.style.height = t.size + "px"),
            void 0 === t.src)
          ) {
            var o = document.createElement("span");
            (o.innerHTML = this.id + 1),
              e.appendChild(o),
              (e.style.backgroundSize = 6 * t.size + "px " + t.size + "px"),
              void 0 !== t.type &&
                (e.style.backgroundPositionX =
                  -n[t.type.toUpperCase()] * t.size + "px");
          } else
            "string" == typeof t.src &&
              (e.style.backgroundImage = "url(" + t.src + ")");
          e.addEventListener(s, i);
        }),
        (e.prototype.setActive = function (t) {
          this.el.style.opacity = t ? 0.4 : 1;
        }),
        (e.prototype.targetItem = function (t) {
          this.mviewer.mbar.isDragging ||
            ((this.mviewer.mbar.thumbnailTarget = !0),
            this.mviewer.target(this.id));
        }),
        (e.prototype.dispose = function () {
          (this.el.com = null), this.el.removeEventListener(s, i);
        }),
        e
      );
    }),
    i(
      "rs/media/MediaViewerBar",
      ["rs/utils/BrowserUtil", "rs/media/MediaViewerThumbnail"],
      function (t, e) {
        "use strict";
        function i(t) {
          (this.mviewer = t), this.build();
        }
        return (
          (i.prototype.build = function () {
            var t = (this.el = document.createElement("div"));
            (t.className = "rs-mediaviewer-bar"), (t.style.display = "none");
            var e = this.mviewer.dopt,
              i = e.thumbnailSize;
            this.visibleThumbs = e.maxVisibleThumbnail;
            var s = (this.leftBtn = document.createElement("span"));
            (s.className = "bar-Btn rs-med-icon-left"),
              (s.style.lineHeight = i + "px"),
              t.appendChild(s);
            var n = (this.container = document.createElement("div"));
            (n.style.overflow = "hidden"),
              (n.style.float = "left"),
              (n.style.position = "relative"),
              (n.style.height = e.thumbnailSize + "px"),
              t.appendChild(n);
            var o = (this.containerInner = document.createElement("ul"));
            (o.style.height = "100%"), n.appendChild(o);
            var r = (this.rightBtn = document.createElement("span"));
            (r.className = "bar-Btn rs-med-icon-right"),
              (r.style.lineHeight = e.thumbnailSize + "px"),
              t.appendChild(r);
            var a = this;
            (this.leftBtn.onclick = function (t) {
              a.prev();
            }),
              (this.rightBtn.onclick = function (t) {
                a.next();
              }),
              this.setDraggable();
          }),
          (i.prototype.setDraggable = function () {
            function e(t) {
              (l.thumbnailTarget = !1),
                (o = void 0 === t.clientX ? t.touches[0].clientX : t.clientX),
                document.body.addEventListener(c, n),
                document.body.addEventListener(u, i);
            }
            function i(t) {
              if (
                ((l.isDragging = !1),
                document.body.removeEventListener(c, n),
                document.body.removeEventListener(u, i),
                !l.thumbnailTarget)
              ) {
                var e;
                (e =
                  void 0 === t.clientX
                    ? l.posX + t.changedTouches[0].clientX - o
                    : l.posX + t.clientX - o),
                  e < l.posX ? l.next() : l.prev();
              }
            }
            function s(t) {
              return void 0 === t.clientX
                ? l.posX + t.touches[0].clientX - o
                : l.posX + t.clientX - o;
            }
            function n(t) {
              l.isDragging = !0;
              var e = s(t);
              anime.remove(a),
                anime({
                  targets: a,
                  duration: 0,
                  translateX: e,
                  easing: "easeOutQuint",
                });
            }
            var o,
              r = this.container,
              a = this.containerInner,
              l = this,
              h = t.getMouseTouchEvents(),
              d = h.mdown,
              c = h.mmove,
              u = h.mup;
            r.addEventListener(d, e);
          }),
          (i.prototype.loadThumbnails = function (t) {
            this.currentCatId = t;
            var i = this.mviewer.data[t].items;
            this.removeAll();
            for (
              var s = this.mviewer.dopt, n = this.containerInner, o = 0;
              o < i.length;
              o++
            ) {
              var r = new e(this.mviewer, {
                size: s.thumbnailSize,
                src: i[o].thumbnail,
                type: i[o].type,
                id: o,
              });
              n.appendChild(r.el);
            }
            (n.style.width = i.length * s.thumbnailSize + "px"),
              (this.currentSet = 0),
              (this.currentItemId = 0),
              (this.totalItems = i.length),
              (this.lastActiveThumb = null);
          }),
          (i.prototype.setVisibleArea = function () {
            var e = t.computeStyle(document.body, "width") - 12,
              i = this.mviewer.dopt;
            i.thumbnailSize;
            this.visibleThumbs = i.maxVisibleThumbnail;
            var s = i.thumbnailSize * this.visibleThumbs;
            s + 64 > e &&
              ((this.visibleThumbs = Math.floor((e - 64) / i.thumbnailSize)),
              (s = this.visibleThumbs * i.thumbnailSize)),
              (this.container.style.width = s + "px"),
              (this.leftBtn.style.marginLeft = 0.5 * (e - s - 64) + "px"),
              (this.currentSet = Math.floor(
                this.currentItemId / this.visibleThumbs
              )),
              this.target(this.currentSet);
          }),
          (i.prototype.target = function (t) {
            (this.currentSet = t),
              t === this.getTotalSet() - 1
                ? (this.rightBtn.style.display = "none")
                : (this.rightBtn.style.display = "block"),
              (this.leftBtn.style.visibility = 0 === t ? "hidden" : "visible");
            var e =
              -this.currentSet *
              this.visibleThumbs *
              this.mviewer.dopt.thumbnailSize;
            (this.posX = e),
              anime.remove(this.containerInner),
              anime({
                targets: this.containerInner,
                duration: 1e3,
                translateX: e,
                easing: "easeOutQuint",
              });
          }),
          (i.prototype.targetItem = function (t) {
            (this.currentItemId = t),
              (this.currentSet = Math.floor(
                this.currentItemId / this.visibleThumbs
              )),
              this.setActiveThumbnail(t),
              this.target(this.currentSet);
          }),
          (i.prototype.setActiveThumbnail = function (t) {
            var e = this.containerInner,
              i = e.children[t];
            i.com.setActive(!0),
              null !== this.lastActiveThumb &&
                this.lastActiveThumb.setActive(!1),
              (this.lastActiveThumb = i.com);
          }),
          (i.prototype.getTotalSet = function () {
            return (
              (this.totalSet = Math.floor(
                this.totalItems / this.visibleThumbs
              )),
              this.totalItems % this.visibleThumbs > 0 && this.totalSet++,
              this.totalSet
            );
          }),
          (i.prototype.getSetLength = function () {
            return this.visibleThumbs * this.mviewer.dopt.thumbnailSize;
          }),
          (i.prototype.next = function () {
            this.getTotalSet();
            this.currentSet < this.totalSet - 1
              ? this.target(this.currentSet + 1)
              : this.target(this.totalSet - 1);
          }),
          (i.prototype.prev = function () {
            this.currentSet > 0
              ? this.target(this.currentSet - 1)
              : this.target(0);
          }),
          (i.prototype.removeAll = function () {
            for (; this.containerInner.firstChild; ) {
              var t = this.containerInner.firstChild;
              t.com.dispose(), this.containerInner.removeChild(t);
            }
          }),
          (i.prototype.show = function () {
            var t = this.mviewer.dopt.showDuration;
            (this.el.style.display = "block"),
              anime({
                targets: this.el,
                translateY: ["100%", "0%"],
                duration: t,
                easing: "easeOutQuint",
              });
          }),
          (i.prototype.hide = function () {
            var t = this.mviewer.dopt.hideDuration;
            anime({
              targets: this.el,
              translateY: "100%",
              duration: t,
              easing: "easeOutQuint",
            });
          }),
          i
        );
      }
    ),
    (function (t, e, s) {
      "use strict";
      "undefined" != typeof module && module.exports
        ? (module.exports = s(e, t))
        : "function" == typeof i && i.amd
        ? i("libs/audio5.min", [], function () {
            return s(e, t);
          })
        : (t[e] = s(e, t));
    })(window, "Audio5js", function (t, e) {
      "use strict";
      function i(t) {
        this.message = t;
      }
      function s(t) {
        var e,
          i = {};
        for (e in t) "object" == typeof t[e] ? (i[e] = s(t[e])) : (i[e] = t[e]);
        return i;
      }
      var n = e.ActiveXObject;
      i.prototype = new Error();
      var o = function (t, e) {
          var i,
            n = s(e);
          for (i in n) n.hasOwnProperty(i) && (t[i] = n[i]);
          return t;
        },
        r = function (t, e) {
          return o(t.prototype, e);
        },
        a = {
          on: function (t, e, i) {
            this.subscribe(t, e, i, !1);
          },
          one: function (t, e, i) {
            this.subscribe(t, e, i, !0);
          },
          off: function (t, e) {
            if (void 0 !== this.channels[t]) {
              var i, s;
              for (i = 0, s = this.channels[t].length; i < s; i++)
                if (this.channels[t][i].fn === e) {
                  this.channels[t].splice(i, 1);
                  break;
                }
            }
          },
          subscribe: function (t, e, i, s) {
            void 0 === this.channels && (this.channels = {}),
              (this.channels[t] = this.channels[t] || []),
              this.channels[t].push({ fn: e, ctx: i, once: s || !1 });
          },
          trigger: function (t) {
            if (this.channels && this.channels.hasOwnProperty(t)) {
              for (
                var e = Array.prototype.slice.call(arguments, 1),
                  i = [],
                  s = [];
                this.channels[t].length > 0;

              ) {
                var n = this.channels[t].shift();
                n.once || i.push(n), "function" == typeof n.fn && s.push(n);
              }
              for (this.channels[t] = i; s.length > 0; ) {
                var o = s.shift();
                o.fn.apply(o.ctx, e);
              }
            }
          },
        },
        l = {
          flash_embed_code: function (e, i, s) {
            var o = t + e,
              r =
                '<param name="movie" value="' +
                i +
                "?playerInstanceNumber=" +
                e +
                "&datetime=" +
                s +
                '"/><param name="wmode" value="transparent"/><param name="allowscriptaccess" value="always" /></object>';
            return (
              (n
                ? '<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" width="1" height="1" id="' +
                  o +
                  '">'
                : '<object type="application/x-shockwave-flash" data="' +
                  i +
                  "?playerInstanceNumber=" +
                  e +
                  "&datetime=" +
                  s +
                  '" width="1" height="1" id="' +
                  o +
                  '" >') + r
            );
          },
          can_play: function (t) {
            var e,
              i = document.createElement("audio");
            switch (t) {
              case "mp3":
                e = "audio/mpeg;";
                break;
              case "vorbis":
                e = 'audio/ogg; codecs="vorbis"';
                break;
              case "opus":
                e = 'audio/ogg; codecs="opus"';
                break;
              case "webm":
                e = 'audio/webm; codecs="vorbis"';
                break;
              case "mp4":
                e = 'audio/mp4; codecs="mp4a.40.5"';
                break;
              case "wav":
                e = 'audio/wav; codecs="1"';
            }
            if (void 0 !== e) {
              if (
                "mp3" === t &&
                navigator.userAgent.match(/Android/i) &&
                navigator.userAgent.match(/Firefox/i)
              )
                return !0;
              try {
                return !!i.canPlayType && "" !== i.canPlayType(e);
              } catch (t) {
                return !1;
              }
            }
            return !1;
          },
          has_flash: (function () {
            var t = !1;
            if (
              navigator.plugins &&
              navigator.plugins.length &&
              navigator.plugins["Shockwave Flash"]
            )
              t = !0;
            else if (navigator.mimeTypes && navigator.mimeTypes.length) {
              var e = navigator.mimeTypes["application/x-shockwave-flash"];
              t = e && e.enabledPlugin;
            } else
              try {
                var i = new n("ShockwaveFlash.ShockwaveFlash");
                t = "object" == typeof i;
              } catch (t) {}
            return t;
          })(),
          embedFlash: function (i, s) {
            var n = document.createElement("div");
            if (
              ((n.style.position = "absolute"),
              (n.style.width = "1px"),
              (n.style.height = "1px"),
              (n.style.top = "1px"),
              document.body.appendChild(n),
              "object" == typeof e.swfobject)
            ) {
              var o = {
                  playerInstance:
                    "window." + t + "_flash.instances['" + s + "']",
                },
                r = { allowscriptaccess: "always", wmode: "transparent" };
              (n.innerHTML = '<div id="' + t + s + '"></div>'),
                swfobject.embedSWF(
                  i + "?ts=" + (new Date().getTime() + Math.random()),
                  t + s,
                  "1",
                  "1",
                  "9.0.0",
                  null,
                  o,
                  r
                );
            } else {
              var a = new Date().getTime() + Math.random();
              n.innerHTML = this.flash_embed_code(s, i, a);
            }
            return document.getElementById(s);
          },
          formatTime: function (t) {
            var e = parseInt(t / 3600, 10) % 24,
              i = parseInt(t / 60, 10) % 60,
              s = parseInt(t % 60, 10),
              n = (i < 10 ? "0" + i : i) + ":" + (s < 10 ? "0" + s : s);
            return e > 0 ? (e < 10 ? "0" + e : e) + ":" + n : n;
          },
        };
      l.use_flash = l.can_play("mp3");
      var h,
        d,
        c,
        u = {
          playing: !1,
          vol: 1,
          duration: 0,
          position: 0,
          load_percent: 0,
          seekable: !1,
          ready: null,
        },
        p = (e[t + "_flash"] = e[t + "_flash"] || { instances: [] });
      (d = function () {
        if (l.use_flash && !l.has_flash)
          throw new Error("Flash Plugin Missing");
      }),
        (d.prototype = {
          init: function (t) {
            p.instances.push(this),
              (this.id = p.instances.length - 1),
              this.embed(t);
          },
          embed: function (t) {
            l.embedFlash(t, this.id);
          },
          eiReady: function () {
            (this.audio = document.getElementById(t + this.id)),
              this.trigger("ready");
          },
          eiLoadStart: function () {
            this.trigger("loadstart");
          },
          eiLoadedMetadata: function () {
            this.trigger("loadedmetadata");
          },
          eiCanPlay: function () {
            this.trigger("canplay");
          },
          eiTimeUpdate: function (t, e, i) {
            (this.position = t),
              (this.duration = e),
              (this.seekable = i),
              this.trigger("timeupdate", t, this.seekable ? e : null);
          },
          eiProgress: function (t, e, i) {
            (this.load_percent = t),
              (this.duration = e),
              (this.seekable = i),
              this.trigger("progress", t);
          },
          eiLoadError: function (t) {
            this.trigger("error", t);
          },
          eiPlay: function () {
            (this.playing = !0), this.trigger("play"), this.trigger("playing");
          },
          eiPause: function () {
            (this.playing = !1), this.trigger("pause");
          },
          eiEnded: function () {
            this.pause(), this.trigger("ended");
          },
          eiSeeking: function () {
            this.trigger("seeking");
          },
          eiSeeked: function () {
            this.trigger("seeked");
          },
          reset: function () {
            (this.seekable = !1),
              (this.duration = 0),
              (this.position = 0),
              (this.load_percent = 0);
          },
          load: function (t) {
            this.reset(), this.audio.load(t);
          },
          play: function () {
            this.audio.pplay();
          },
          pause: function () {
            this.audio.ppause();
          },
          volume: function (t) {
            if (void 0 === t || isNaN(parseInt(t, 10))) return this.vol;
            this.audio.setVolume(t), (this.vol = t);
          },
          seek: function (t) {
            try {
              this.audio.seekTo(t), (this.position = t);
            } catch (t) {}
          },
          rate: function () {},
          destroyAudio: function () {
            this.audio &&
              (this.pause(),
              this.audio.parentNode.removeChild(this.audio),
              delete p.instances[this.id],
              p.instances.splice(this.id, 1),
              delete this.audio);
          },
        }),
        r(d, a),
        r(d, u),
        (c = function () {}),
        (c.prototype = {
          init: function () {
            (this._rate = 1), this.trigger("ready");
          },
          createAudio: function () {
            (this.audio = new Audio()),
              (this.audio.autoplay = !1),
              (this.audio.preload = "auto"),
              (this.audio.autobuffer = !0),
              (this.audio.playbackRate = this._rate),
              this.bindEvents();
          },
          destroyAudio: function () {
            if (this.audio) {
              this.pause(), this.unbindEvents();
              try {
                this.audio.setAttribute("src", "");
              } finally {
                delete this.audio;
              }
            }
          },
          setupEventListeners: function () {
            this.listeners = {
              loadstart: this.onLoadStart.bind(this),
              canplay: this.onLoad.bind(this),
              loadedmetadata: this.onLoadedMetadata.bind(this),
              play: this.onPlay.bind(this),
              playing: this.onPlaying.bind(this),
              pause: this.onPause.bind(this),
              ended: this.onEnded.bind(this),
              error: this.onError.bind(this),
              timeupdate: this.onTimeUpdate.bind(this),
              seeking: this.onSeeking.bind(this),
              seeked: this.onSeeked.bind(this),
            };
          },
          bindEvents: function () {
            void 0 === this.listeners && this.setupEventListeners(),
              this.audio.addEventListener(
                "loadstart",
                this.listeners.loadstart,
                !1
              ),
              this.audio.addEventListener(
                "canplay",
                this.listeners.canplay,
                !1
              ),
              this.audio.addEventListener(
                "loadedmetadata",
                this.listeners.loadedmetadata,
                !1
              ),
              this.audio.addEventListener("play", this.listeners.play, !1),
              this.audio.addEventListener(
                "playing",
                this.listeners.playing,
                !1
              ),
              this.audio.addEventListener("pause", this.listeners.pause, !1),
              this.audio.addEventListener("ended", this.listeners.ended, !1),
              this.audio.addEventListener("error", this.listeners.error, !1),
              this.audio.addEventListener(
                "timeupdate",
                this.listeners.timeupdate,
                !1
              ),
              this.audio.addEventListener(
                "seeking",
                this.listeners.seeking,
                !1
              ),
              this.audio.addEventListener("seeked", this.listeners.seeked, !1);
          },
          unbindEvents: function () {
            this.audio.removeEventListener(
              "loadstart",
              this.listeners.loadstart
            ),
              this.audio.removeEventListener("canplay", this.listeners.canplay),
              this.audio.removeEventListener(
                "loadedmetadata",
                this.listeners.loadedmetadata
              ),
              this.audio.removeEventListener("play", this.listeners.play),
              this.audio.removeEventListener("playing", this.listeners.playing),
              this.audio.removeEventListener("pause", this.listeners.pause),
              this.audio.removeEventListener("ended", this.listeners.ended),
              this.audio.removeEventListener("error", this.listeners.error),
              this.audio.removeEventListener(
                "timeupdate",
                this.listeners.timeupdate
              ),
              this.audio.removeEventListener("seeking", this.listeners.seeking),
              this.audio.removeEventListener("seeked", this.listeners.seeked);
          },
          onLoadStart: function () {
            this.trigger("loadstart");
          },
          onLoad: function () {
            if (!this.audio) return setTimeout(this.onLoad.bind(this), 100);
            (this.seekable =
              this.audio.seekable && this.audio.seekable.length > 0),
              this.seekable &&
                (this.timer = setInterval(this.onProgress.bind(this), 250)),
              this.trigger("canplay");
          },
          onLoadedMetadata: function () {
            this.trigger("loadedmetadata");
          },
          onPlay: function () {
            (this.playing = !0), this.trigger("play");
          },
          onPlaying: function () {
            (this.playing = !0), this.trigger("playing");
          },
          onPause: function () {
            (this.playing = !1), this.trigger("pause");
          },
          onEnded: function () {
            (this.playing = !1), this.trigger("ended");
          },
          onTimeUpdate: function () {
            if (this.audio && this.playing) {
              try {
                (this.position = this.audio.currentTime),
                  (this.duration =
                    this.audio.duration === 1 / 0 ? null : this.audio.duration);
              } catch (t) {}
              this.trigger("timeupdate", this.position, this.duration);
            }
          },
          onProgress: function () {
            this.audio &&
              null !== this.audio.buffered &&
              this.audio.buffered.length &&
              ((this.duration =
                this.audio.duration === 1 / 0 ? null : this.audio.duration),
              (this.load_percent = parseInt(
                (this.audio.buffered.end(this.audio.buffered.length - 1) /
                  this.duration) *
                  100,
                10
              )),
              this.trigger("progress", this.load_percent),
              this.load_percent >= 100 && this.clearLoadProgress());
          },
          onError: function (t) {
            this.trigger("error", t);
          },
          onSeeking: function () {
            this.trigger("seeking");
          },
          onSeeked: function () {
            this.trigger("seeked");
          },
          clearLoadProgress: function () {
            void 0 !== this.timer &&
              (clearInterval(this.timer), delete this.timer);
          },
          reset: function () {
            this.clearLoadProgress(),
              (this.seekable = !1),
              (this.duration = 0),
              (this.position = 0),
              (this.load_percent = 0);
          },
          load: function (t) {
            this.reset(),
              this.trigger("pause"),
              void 0 === this.audio && this.createAudio(),
              this.audio.setAttribute("src", t),
              this.audio.load();
          },
          play: function () {
            if (this.audio) {
              var t = this.audio.play();
              return (this.audio.playbackRate = this._rate), t;
            }
          },
          pause: function () {
            this.audio && this.audio.pause();
          },
          volume: function (t) {
            if (void 0 === t || isNaN(parseInt(t, 10))) return this.vol;
            var e = t < 0 ? 0 : Math.min(1, t);
            (this.audio.volume = e), (this.vol = e);
          },
          seek: function (t) {
            var e = this.playing;
            (this.position = t),
              (this.audio.currentTime = t),
              e
                ? this.play()
                : null !== this.audio.buffered &&
                  this.audio.buffered.length &&
                  this.trigger("timeupdate", this.position, this.duration);
          },
          rate: function (t) {
            if (void 0 === t || isNaN(parseFloat(t))) return this._rate;
            (this._rate = t), this.audio && (this.audio.playbackRate = t);
          },
        }),
        r(c, a),
        r(c, u);
      var f = {
        swf_path: "/swf/audiojs.swf",
        throw_errors: !0,
        format_time: !0,
        codecs: ["mp3"],
      };
      return (
        (h = function (t) {
          t = t || {};
          var e;
          for (e in f)
            f.hasOwnProperty(e) && !t.hasOwnProperty(e) && (t[e] = f[e]);
          this.init(t);
        }),
        (h.can_play = function (t) {
          return l.can_play(t);
        }),
        (h.prototype = {
          init: function (t) {
            (this.ready = !1),
              (this.settings = t),
              (this.audio = this.getPlayer()),
              this.bindAudioEvents(),
              this.settings.use_flash
                ? this.audio.init(t.swf_path)
                : this.audio.init();
          },
          getPlayer: function () {
            var t, e, i, s;
            if (this.settings.use_flash)
              (i = new d()),
                (this.settings.player = { engine: "flash", codec: "mp3" });
            else {
              for (t = 0, e = this.settings.codecs.length; t < e; t++)
                if (((s = this.settings.codecs[t]), h.can_play(s))) {
                  (i = new c()),
                    (this.settings.use_flash = !1),
                    (this.settings.player = { engine: "html", codec: s });
                  break;
                }
              void 0 === i &&
                ((this.settings.use_flash = !h.can_play("mp3")),
                (i = this.settings.use_flash ? new d() : new c()),
                (this.settings.player = {
                  engine: this.settings.use_flash ? "flash" : "html",
                  codec: "mp3",
                }));
            }
            return i;
          },
          bindAudioEvents: function () {
            this.audio.on("ready", this.onReady, this),
              this.audio.on("loadstart", this.onLoadStart, this),
              this.audio.on("loadedmetadata", this.onLoadedMetadata, this),
              this.audio.on("play", this.onPlay, this),
              this.audio.on("pause", this.onPause, this),
              this.audio.on("ended", this.onEnded, this),
              this.audio.on("canplay", this.onCanPlay, this),
              this.audio.on("timeupdate", this.onTimeUpdate, this),
              this.audio.on("progress", this.onProgress, this),
              this.audio.on("error", this.onError, this),
              this.audio.on("seeking", this.onSeeking, this),
              this.audio.on("seeked", this.onSeeked, this);
          },
          unbindAudioEvents: function () {
            this.audio.off("ready", this.onReady),
              this.audio.off("loadstart", this.onLoadStart),
              this.audio.off("loadedmetadata", this.onLoadedMetadata),
              this.audio.off("play", this.onPlay),
              this.audio.off("pause", this.onPause),
              this.audio.off("ended", this.onEnded),
              this.audio.off("canplay", this.onCanPlay),
              this.audio.off("timeupdate", this.onTimeUpdate),
              this.audio.off("progress", this.onProgress),
              this.audio.off("error", this.onError),
              this.audio.off("seeking", this.onSeeking),
              this.audio.off("seeked", this.onSeeked);
          },
          load: function (t) {
            var e = this,
              i = function (t) {
                e.audio.load(t), e.trigger("load");
              };
            this.ready ? i(t) : this.on("ready", i);
          },
          play: function () {
            if (!this.playing) return this.audio.play();
          },
          pause: function () {
            this.playing && this.audio.pause();
          },
          playPause: function () {
            this[this.playing ? "pause" : "play"]();
          },
          volume: function (t) {
            if (void 0 === t || isNaN(parseInt(t, 10))) return this.vol;
            this.audio.volume(t), (this.vol = t);
          },
          seek: function (t) {
            this.audio.seek(t), (this.position = t);
          },
          rate: function (t) {
            return this.audio.rate(t);
          },
          destroy: function () {
            this.unbindAudioEvents(), this.audio.destroyAudio();
          },
          onReady: function () {
            (this.ready = !0),
              "function" == typeof this.settings.ready &&
                this.settings.ready.call(this, this.settings.player),
              this.trigger("ready");
          },
          onLoadStart: function () {
            this.trigger("loadstart");
          },
          onLoadedMetadata: function () {
            this.trigger("loadedmetadata");
          },
          onPlay: function () {
            (this.playing = !0), this.trigger("play");
          },
          onPause: function () {
            (this.playing = !1), this.trigger("pause");
          },
          onEnded: function () {
            (this.playing = !1), this.trigger("ended");
          },
          onError: function () {
            var t = new i("Audio Error. Failed to Load Audio");
            if (this.settings.throw_errors) throw t;
            this.trigger("error", t);
          },
          onCanPlay: function () {
            this.trigger("canplay");
          },
          onSeeking: function () {
            this.trigger("seeking");
          },
          onSeeked: function () {
            this.trigger("seeked");
          },
          onTimeUpdate: function (t, e) {
            (this.position = this.settings.format_time ? l.formatTime(t) : t),
              (this.duration =
                this.settings.format_time && null !== e ? l.formatTime(e) : e),
              this.trigger("timeupdate", this.position, this.duration);
          },
          onProgress: function (t) {
            (this.duration = this.audio.duration),
              (this.load_percent = t),
              this.trigger("progress", t);
          },
        }),
        r(h, a),
        r(h, u),
        h
      );
    }),
    i(
      "rs/media/AudioPlayer",
      ["rs/utils/BrowserUtil", "rs/utils/ObjectUtil", "libs/audio5.min"],
      function (t, e, i) {
        "use strict";
        function s(t) {
          this.build(t);
        }
        var n = "rs-med-icon-play",
          o = "rs-med-icon-sound",
          r = 30;
        return (
          Object.defineProperties(s.prototype, {
            width: {
              get: function () {
                return this._width;
              },
              set: function (t) {
                this._width = t;
              },
            },
            height: {
              get: function () {
                return this._height;
              },
              set: function (t) {
                this._height = t;
              },
            },
          }),
          (s.prototype.build = function (t) {
            var s = {
              width: 300,
              height: 200,
              visual: !0,
              visualBg: "#333333",
              visualColor: "#ffcc00",
            };
            e.merge(t, s),
              (this.dopt = s),
              (this.root = this.el = document.createElement("div")),
              (this.root.className = "rs-audioplayer"),
              this.buildTitle(),
              this.buildVisualizer(),
              this.buildControls();
            var n = this;
            (this.isPlaying = !1),
              (this.au = new i({
                ready: function () {
                  this.on(
                    "play",
                    function () {
                      n.aCtx || n.initAnalyser(), n.ana && n.render();
                    },
                    this
                  ),
                    this.on("pause", function () {}, this),
                    this.on(
                      "ended",
                      function () {
                        n.pp.setPlay(), n.pbar.setValue(0);
                      },
                      this
                    ),
                    this.on(
                      "timeupdate",
                      function (t, e) {
                        n.ana || n.renderNumber(t), n.updateProgress();
                      },
                      this
                    );
                },
              })),
              this.pp.el.addEventListener("click", function (t) {
                n.au.playing ? n.pause() : n.play();
              }),
              this.sbtn.el.addEventListener("click", function (t) {
                t.target.classList.contains("rs-med-icon-sound-mute")
                  ? n.unmute()
                  : n.mute();
              });
            var o = this.pbar.barWidth;
            this.pbar.bar.addEventListener("click", function (t) {
              var e = t.offsetX / o;
              n.seek(e);
            });
          }),
          (s.prototype.buildControls = function () {
            function t() {
              (this.el = document.createElement("span")),
                this.el.classList.add("ap-button", n);
              var t = this.el.style;
              (t.width = t.height = t.lineHeight = l + "px"),
                (t.fontSize = h + "px");
            }
            function e() {
              (this.el = document.createElement("div")),
                this.el.classList.add("progressBar"),
                (this.bar = document.createElement("div")),
                this.bar.classList.add("bar"),
                (this.barInner = document.createElement("div")),
                this.barInner.classList.add("barInner"),
                this.el.appendChild(this.bar),
                this.bar.appendChild(this.barInner),
                (this.width = a.width - 2 * r);
              var t = this.el.style;
              (t.height = r + "px"),
                (t.width = this.width + "px"),
                (t.left = r + "px");
              var e = 0.5 * (r - 4),
                i = (this.barWidth = this.width - 12),
                s = this.bar.style,
                n = this.barInner.style;
              (s.position = n.position = "absolute"),
                (s.top = e + "px"),
                (s.left = "6px"),
                (s.height = "4px"),
                (s.width = i + "px"),
                (n.height = "4px");
            }
            function i() {
              (this.el = document.createElement("div")),
                this.el.classList.add("ap-button", o);
              var t = this.el.style;
              (t.width = t.height = t.lineHeight = l + "px"),
                (t.fontSize = h + "px"),
                (t.left = a.width - r + "px");
            }
            var s = (this.ctl = document.createElement("div"));
            (s.className = "ap-controls"), this.root.appendChild(s);
            var a = this.dopt,
              l = r,
              h = Math.round(0.5 * l);
            (t.prototype.setPlay = function () {
              this.el.classList.remove("rs-med-icon-pause"),
                this.el.classList.add(n);
            }),
              (t.prototype.setPause = function () {
                this.el.classList.remove(n),
                  this.el.classList.add("rs-med-icon-pause");
              }),
              (t.prototype.toggle = function () {
                this.el.classList.contains(n)
                  ? this.setPause()
                  : this.setPlay();
              });
            var d = (this.pp = new t());
            s.appendChild(d.el),
              (e.prototype.setValue = function (t) {
                (this.value = t), (this.barInner.style.width = 100 * t + "%");
              }),
              (e.prototype.getValue = function () {
                return this.value;
              });
            var c = (this.pbar = new e());
            s.appendChild(c.el),
              (i.prototype.mute = function () {
                this.el.classList.remove(o),
                  this.el.classList.add("rs-med-icon-sound-mute");
              }),
              (i.prototype.unmute = function () {
                this.el.classList.add(o),
                  this.el.classList.remove("rs-med-icon-sound-mute");
              });
            var u = (this.sbtn = new i());
            s.appendChild(u.el);
          }),
          (s.prototype.buildTitle = function () {
            var t = (this.title = document.createElement("div"));
            (t.className = "ap-title"), (t.innerHTML = "Item Title");
            var e = this.dopt;
            (t.style.width = e.width + "px"), this.root.appendChild(t);
          }),
          (s.prototype.buildVisualizer = function () {
            var t = (this.vis = document.createElement("canvas"));
            this.vctx = this.vis.getContext("2d");
            t.className = "ap-vis";
            var e = this.dopt;
            (t.width = this.vwidth = e.width),
              (t.height = this.vheight = e.height - r),
              this.root.appendChild(t);
          }),
          (s.prototype.initAnalyser = function () {
            if (
              this.dopt.visual &&
              !t.isMobile() &&
              "Safari" !== t.browserName &&
              (window.AudioContext || window.webkitAudioContext)
            ) {
              var e = window.AudioContext || window.webkitAudioContext,
                i = new e(),
                s = i.createMediaElementSource(this.au.audio.audio),
                n = i.createAnalyser();
              s.connect(n), s.connect(i.destination), (n.fftSize = 512);
              var o = n.frequencyBinCount,
                r = new Uint8Array(o);
              (this.aCtx = i),
                (this.aSrc = s),
                (this.ana = n),
                (this.bufferLength = o),
                (this.dataArray = r);
            }
          }),
          (s.prototype.load = function (t) {
            (this.src = t), this.au.load(t);
          }),
          (s.prototype.play = function (t) {
            void 0 !== t ? (this.load(t), this.au.play(t)) : this.au.play(),
              this.pp.setPause();
          }),
          (s.prototype.pause = function () {
            this.au.pause(),
              (this.au.playing = !1),
              cancelAnimationFrame(this.renderId),
              this.pp.setPlay();
          }),
          (s.prototype.stop = function () {
            this.au.pause();
          }),
          (s.prototype.reset = function () {
            var t = this.vwidth,
              e = this.vheight;
            this.au.pause(),
              this.pbar.setValue(0),
              this.pp.setPlay(),
              this.sbtn.unmute();
            var i = this.vctx;
            (i.fillStyle = this.dopt.visualBg), i.fillRect(0, 0, t, e);
          }),
          (s.prototype.mute = function () {
            this.au.volume(0), this.sbtn.mute();
          }),
          (s.prototype.unmute = function () {
            this.au.volume(1), this.sbtn.unmute();
          }),
          (s.prototype.resize = function (t) {}),
          (s.prototype.setTitle = function (t) {
            this.title.innerHTML = t;
          }),
          (s.prototype.seek = function (t) {
            this.au.playing && this.au.seek(t * this.au.audio.duration);
          }),
          (s.prototype.updateProgress = function () {
            var t = this.au.audio.audio,
              e = t.currentTime,
              i = t.duration;
            this.pbar.setValue(e / i);
          }),
          (s.prototype.render = function () {
            this.bufferLength = 100;
            var t = this.vwidth,
              e = this.vheight,
              i = this.vctx;
            (i.fillStyle = this.dopt.visualBg), i.fillRect(0, 0, t, e);
            var s = this.dataArray;
            this.ana.getByteFrequencyData(s);
            for (
              var n, o = (t / this.bufferLength) * 2.5, r = 0, a = 0;
              a < this.bufferLength;
              a++
            )
              (n = 0.75 * s[a]),
                (i.fillStyle = this.dopt.visualColor),
                i.fillRect(r, e - 0.75 * n, o, n),
                (r += o + 1);
            this.renderId = window.requestAnimationFrame(
              this.render.bind(this)
            );
          }),
          (s.prototype.renderNumber = function (t) {
            var e = this.vwidth,
              i = this.vheight,
              s = this.vctx;
            (s.fillStyle = this.dopt.visualBg),
              s.fillRect(0, 0, e, i),
              (s.font = "60px Open Sans Light"),
              (s.fillStyle = "#eeeeee"),
              (s.textAlign = "center"),
              (s.textBaseline = "middle"),
              s.fillText(t, 0.5 * e, 0.5 * i);
          }),
          (s.prototype.selfCenter = function () {
            var e = t.computeStyle(this.el, "width"),
              i = t.computeStyle(this.el, "height");
            (this.el.style.marginTop = 0.5 * -i + "px"),
              (this.el.style.marginLeft = 0.5 * -e + "px");
          }),
          s
        );
      }
    ),
    i("rs/media/VideoPlayer", ["rs/utils/ObjectUtil"], function (t) {
      "use strict";
      function e(t) {
        this.build(t);
      }
      return (
        (e.prototype.build = function (e) {
          var i = {
            width: 300,
            height: 250,
            id: "rsVideoPlayer",
            dataSetup: {},
          };
          t.merge(e, i), (this.dopt = i), (this.dataSetup = i.dataSetup);
          var s = (this.el = document.createElement("video"));
          (s.id = this.id = i.id),
            (s.className = "video-js"),
            (s.controls = !0),
            (s.preload = "auto"),
            (s.width = i.width),
            (s.height = i.height);
          var n = document.createElement("p");
          (n.className = "vjs-no-js"),
            (n.innerHTML =
              ' To view this video please enable JavaScript, and consider upgrading to a web browser that<a href="https://videojs.com/html5-video-support/" target="_blank" >supports HTML5 video</a>'),
            s.appendChild(n);
        }),
        Object.defineProperties(e.prototype, {
          width: {
            get: function () {
              return this.player ? this.player.width() : null;
            },
            set: function (t) {
              this.player && this.player.width(t);
            },
          },
          height: {
            get: function () {
              return this.player ? this.player.height() : null;
            },
            set: function (t) {
              this.player && this.player.height(t);
            },
          },
        }),
        (e.prototype.show = function (t) {
          this.player
            ? t.appendChild(this.player.el())
            : (t.appendChild(this.el),
              (this.player = videojs(this.el, this.dataSetup))),
            (this.player.el().style.display = "block"),
            (this.isHidden = !1);
        }),
        (e.prototype.hide = function () {
          if (this.player) {
            (this.player.el().style.display = "none"), (this.isHidden = !0);
          }
        }),
        (e.prototype.dispose = function () {
          this.player && this.player.dispose();
        }),
        (e.prototype.src = function (t) {
          this.player && this.player.src(t);
        }),
        (e.prototype.selfCenter = function () {
          if (this.player) {
            var t = this.player.width(),
              e = this.player.height(),
              i = this.player.el();
            (i.style.marginTop = 0.5 * -e + "px"),
              (i.style.marginLeft = 0.5 * -t + "px");
          }
        }),
        (e.prototype.poster = function (t) {
          this.player && this.player.poster(t);
        }),
        (e.prototype.resize = function (t, e) {
          (this.width = t), (this.height = e);
        }),
        (e.prototype.toString = function () {
          return "VideoPlayer";
        }),
        e
      );
    }),
    i(
      "rs/media/MediaViewerDialog",
      [
        "rs/utils/BrowserUtil",
        "rs/media/MediaViewer",
        "rs/media/AudioPlayer",
        "rs/media/VideoPlayer",
      ],
      function (t, e, i, s) {
        "use strict";
        function n(t, e) {
          (this.mviewer = t),
            (this.callback = e),
            (this.lastItemId = -1),
            this.build();
        }
        function o(e, i, s) {
          var n = e.root,
            o = e.mbar.el,
            r = e.des.el,
            a = t.computeStyle(n, "height"),
            l = t.computeStyle(n, "width"),
            h = t.computeStyle(o, "height"),
            d = t.computeStyle(r, "height"),
            c = l,
            u = a - h - d,
            p = i,
            f = s,
            m = 1;
          if (i > c || s > u) {
            m = e.dopt.scaleFactor;
            var y = i / s;
            c / y <= u
              ? ((p = c * m), (f = p / y))
              : ((f = u * m), (p = f * y));
          }
          return [p, f];
        }
        function r(t, e, i) {
          this.dialog = t;
          var s = (this.el = document.createElement("div"));
          s.className = "rs-med-general-content";
          var n = s.style;
          (n.width = e + "px"),
            (n.height = i + "px"),
            (n.marginTop = 0.5 * -i + "px"),
            (n.marginLeft = 0.5 * -e + "px");
        }
        return (
          (n.PHOTO_TYPE = "photo"),
          (n.AUDIO_TYPE = "audio"),
          (n.VIDEO_TYPE = "video"),
          (n.EMBED_TYPE = "embed"),
          (n.AJAX_TYPE = "ajax"),
          (n.INLINE_TYPE = "inline"),
          (n.prototype.build = function () {
            var t = this.mviewer.dopt,
              e = (this.el = document.createElement("div"));
            (e.className = "rs-mediaviewer-dialog"),
              (e.style.display = "none"),
              this.mviewer.dopt.modal &&
                (e.style.width = e.style.height = "auto");
            var n = (this.c0 = document.createElement("div"));
            (n.className = "dialog-content"), (n.id = "con0"), e.appendChild(n);
            var o = (this.c1 = document.createElement("div"));
            (o.className = "dialog-content"),
              (o.id = "con1"),
              e.appendChild(o),
              (n.next = o),
              (o.next = n),
              (this.con = n),
              (this.ap = new i(t.audioPlayerOpt)),
              (this.vp = new s(t.videoPlayerOpt));
            var a = t.videoPlayerOpt.width,
              l = t.videoPlayerOpt.height;
            (this.vp.oWidth = a),
              (this.vp.oHeight = l),
              (this.genCon = new r(this, t.containerWidth, t.containerHeight)),
              (this.genCon.oWidth = t.containerWidth),
              (this.genCon.oHeight = t.containerHeight);
          }),
          (n.prototype.show = function () {
            var t = this.mviewer.dopt.showDuration;
            this.mviewer.root, this.mviewer.dopt.modal;
            (this.el.style.display = "block"),
              anime({
                targets: this.con,
                opacity: [0, 1],
                duration: t,
                easing: "easeOutQuint",
                complete: function () {},
              });
          }),
          (n.prototype.hide = function () {
            var t = this.mviewer.dopt.hideDuration,
              e = this.mviewer.root;
            this.reset(),
              anime({
                targets: this.con,
                opacity: 0,
                duration: t,
                easing: "easeOutQuint",
                complete: function (t) {
                  e.style.display = "none";
                },
              });
          }),
          (n.prototype.setContent = function (t, e) {
            function i(t, i, o) {
              function r(e) {
                var i = e.target;
                (i.oWidth = i.width),
                  (i.oHeight = i.height),
                  s.applyPhotoConstraints(i),
                  t.appendChild(e.target),
                  (s.mviewer.isLoading = !1),
                  s.callback.call(s.mviewer);
              }
              function l() {
                t.appendChild(a.el),
                  s.mviewer.dopt.ajaxProcessor(a.el, this),
                  s.applyGeneralConstraints(),
                  (s.mviewer.isLoading = !1),
                  s.callback.call(s.mviewer);
              }
              switch (((t.type = o), o)) {
                case n.PHOTO_TYPE:
                  var c = document.createElement("img");
                  (s.mviewer.isLoading = !0),
                    (c.onload = r),
                    (c.src = i),
                    (c.draggable = !1);
                  break;
                case n.AUDIO_TYPE:
                  t.appendChild(h.el),
                    h.setTitle(e.content),
                    h.play(i),
                    h.selfCenter(),
                    s.callback.call(s.mviewer);
                  break;
                case n.VIDEO_TYPE:
                  d.show(t),
                    d.src(e.src),
                    d.selfCenter(),
                    "string" == typeof e.poster && d.poster(e.poster),
                    s.applyVideoConstraints(),
                    s.callback.call(s.mviewer);
                  break;
                case n.AJAX_TYPE:
                  var u = new XMLHttpRequest();
                  (s.mviewer.isLoading = !0),
                    u.addEventListener("load", l),
                    u.open("GET", e.src),
                    u.send();
                  break;
                case n.EMBED_TYPE:
                  t.appendChild(a.el),
                    a.dispose(),
                    (a.el.innerHTML = e.src),
                    s.applyEmbedConstraints(),
                    s.callback.call(s.mviewer);
                  break;
                case n.INLINE_TYPE:
                  var p = document.getElementById(e.src);
                  t.appendChild(a.el),
                    a.dispose(),
                    (a.el.innerHTML = p.innerHTML),
                    s.applyGeneralConstraints(),
                    s.callback.call(s.mviewer);
              }
            }
            var s = this,
              o = this.mviewer.dopt.modal,
              r = (s.c0, s.c1, s.con),
              a = s.genCon,
              l = r.next,
              h = this.ap,
              d = this.vp,
              c = e.src,
              u = e.type;
            switch (this.con.type) {
              case n.AUDIO_TYPE:
                this.ap.pause();
                break;
              case n.VIDEO_TYPE:
                this.vp.player.pause();
            }
            this.lastItemId < t
              ? (function () {
                  s.disposeContent(l),
                    o &&
                      (s.disposeContent(r),
                      anime({
                        targets: s.el,
                        opacity: [0, 1],
                        easing: "easeOutQuint",
                        duration: 1e3,
                      })),
                    i(l, c, u),
                    o
                      ? (s.mviewer.inTransition = !1)
                      : ((r.style.left = "50%"),
                        (l.style.left = "150%"),
                        anime({
                          targets: s.el,
                          duration: s.mviewer.dopt.showDuration,
                          easing: "easeOutQuint",
                          translateX: ["0%", "-100%"],
                          complete: function () {
                            s.mviewer.inTransition = !1;
                          },
                        })),
                    (s.con = l);
                })()
              : (function () {
                  s.disposeContent(l),
                    o &&
                      (s.disposeContent(r),
                      anime({
                        targets: s.el,
                        opacity: [0, 1],
                        easing: "easeOutQuint",
                        duration: 1e3,
                      })),
                    i(l, c, u),
                    o
                      ? (s.mviewer.inTransition = !1)
                      : ((r.style.left = "50%"),
                        (l.style.left = "-50%"),
                        anime({
                          targets: s.el,
                          duration: s.mviewer.dopt.showDuration,
                          easing: "easeOutQuint",
                          translateX: ["0%", "100%"],
                          complete: function () {
                            s.mviewer.inTransition = !1;
                          },
                        })),
                    (s.con = l);
                })(),
              (this.lastItemId = t);
          }),
          (n.prototype.applyPhotoConstraints = function (t) {
            if (t) {
              var e = o(this.mviewer, t.oWidth, t.oHeight),
                i = e[0],
                s = e[1];
              (t.width = i),
                (t.height = s),
                (t.style.marginLeft = 0.5 * -i + "px"),
                (t.style.marginTop = 0.5 * -s + "px");
            }
          }),
          (n.prototype.applyVideoConstraints = function () {
            var t = o(this.mviewer, this.vp.oWidth, this.vp.oHeight),
              e = t[0],
              i = t[1];
            (this.vp.width = e), (this.vp.height = i), this.vp.selfCenter();
          }),
          (n.prototype.applyGeneralConstraints = function () {
            var t = o(this.mviewer, this.genCon.oWidth, this.genCon.oHeight),
              e = t[0],
              i = t[1];
            (this.genCon.width = e),
              (this.genCon.height = i),
              this.genCon.selfCenter();
          }),
          (n.prototype.applyEmbedConstraints = function () {
            var t = o(this.mviewer, this.genCon.oWidth, this.genCon.oHeight),
              e = t[0],
              i = t[1];
            console.log(t), (this.genCon.width = e), (this.genCon.height = i);
            var s = this.genCon.el.firstChild;
            (s.width = e), (s.height = i - 10), this.genCon.selfCenter();
          }),
          (n.prototype.disposeContent = function (t) {
            switch (t.type) {
              case n.PHOTO_TYPE:
                if (t.firstChild) {
                  var e = t.firstChild;
                  t.removeChild(e), (e = null);
                }
                break;
              case n.AUDIO_TYPE:
                this.ap.pause(), t.firstChild && t.removeChild(t.firstChild);
                break;
              case n.VIDEO_TYPE:
                this.vp.player.pause(),
                  t.firstChild && t.removeChild(t.firstChild);
                break;
              case n.AJAX_TYPE:
              case n.EMBED_TYPE:
              case n.INLINE_TYPE:
                this.genCon.dispose(),
                  t.firstChild && t.removeChild(t.firstChild);
            }
            t.type = null;
          }),
          (n.prototype.resize = function () {
            function t(t) {
              switch (t.type) {
                case n.PHOTO_TYPE:
                  e.applyPhotoConstraints(t.firstChild);
                  break;
                case n.VIDEO_TYPE:
                  e.applyVideoConstraints();
                  break;
                case n.AJAX_TYPE:
                case n.INLINE_TYPE:
                  e.applyGeneralConstraints();
                  break;
                case n.EMBED_TYPE:
                  e.applyEmbedConstraints();
              }
            }
            var e = (this.c0, this.c1, this);
            t(this.c0), t(this.c1);
          }),
          (n.prototype.reset = function () {
            this.disposeContent(this.c0),
              this.disposeContent(this.c1),
              (this.con = this.c0);
          }),
          Object.defineProperties(r.prototype, {
            width: {
              get: function () {
                return t.computeStyle(this.el, "width");
              },
              set: function (t) {
                this.el.style.width = t + "px";
              },
            },
            height: {
              get: function () {
                return t.computeStyle(this.el, "height");
              },
              set: function (t) {
                this.el.style.height = t + "px";
              },
            },
          }),
          (r.prototype.dispose = function () {
            this.el.textContent = "";
          }),
          (r.prototype.selfCenter = function () {
            var e = t.computeStyle(this.el, "width"),
              i = t.computeStyle(this.el, "height");
            (this.el.style.marginTop = 0.5 * -i + "px"),
              (this.el.style.marginLeft = 0.5 * -e + "px");
          }),
          n
        );
      }
    ),
    i("rs/media/MediaViewerDescription", [], function () {
      "use strict";
      function t(t) {
        (this.mviewer = t), this.build();
      }
      return (
        (t.prototype.build = function (t) {
          var e = (this.el = document.createElement("div"));
          (e.className = "rs-mediaviewer-description"),
            (e.style.display = "none");
        }),
        (t.prototype.setDescription = function (t) {
          this.el.innerHTML = t;
        }),
        (t.prototype.show = function () {
          var t = this.mviewer.dopt.showDuration;
          (this.el.style.display = "block"),
            anime({
              targets: this.el,
              translateY: ["-100%", "0%"],
              duration: t,
              easing: "easeOutQuint",
            });
        }),
        (t.prototype.hide = function () {
          var t = this.mviewer.dopt.hideDuration;
          anime({
            targets: this.el,
            translateY: "-100%",
            duration: t,
            easing: "easeOutQuint",
          });
        }),
        t
      );
    }),
    i("rs/media/MediaViewerControl", ["rs/utils/BrowserUtil"], function (t) {
      "use strict";
      function e(t) {
        (this.mviewer = t), this.build();
      }
      return (
        (e.prototype.build = function () {
          var t = (this.el = document.createElement("div"));
          (t.className = "rs-mediaviewer-controls"), (t.style.display = "none");
          var e = (this.closeBtn = document.createElement("span"));
          (e.className = "rs-mediaviewer-controlBtn rs-med-icon-close"),
            t.appendChild(e);
          var i = (this.nextBtn = document.createElement("span"));
          (i.className = "rs-mediaviewer-controlBtn rs-med-icon-arrow-right"),
            t.appendChild(i);
          var s = (this.preBtn = document.createElement("span"));
          (s.className = "rs-mediaviewer-controlBtn rs-med-icon-arrow-left"),
            t.appendChild(s);
        }),
        (e.prototype.show = function () {
          (this.el.style.display = "block"), this.align();
        }),
        (e.prototype.hide = function () {
          this.el.style.display = "none";
        }),
        (e.prototype.align = function () {
          var e = this.mviewer.root,
            i = (this.mviewer.mbar.el, this.mviewer.des.el),
            s =
              (t.computeStyle(e, "height"),
              t.computeStyle(e, "width"),
              t.computeStyle(this.closeBtn, "fontSize")),
            n = t.computeStyle(i, "height"),
            o = this.closeBtn.style;
          (o.top = n + 6 + "px"), (o.left = "10px");
          var r = this.preBtn.style;
          (r.top = "50%"), (r.left = "4px"), (r.marginTop = 0.5 * -s + "px");
          var a = this.nextBtn.style;
          (a.top = "50%"), (a.right = "4px"), (a.marginTop = 0.5 * -s + "px");
        }),
        e
      );
    }),
    i(
      "rs/media/MediaViewer",
      [
        "rs/utils/ObjectUtil",
        "rs/utils/BrowserUtil",
        "rs/ui/RingPreloader",
        "rs/media/MediaViewerEvent",
        "rs/media/MediaViewerBar",
        "rs/media/MediaViewerDialog",
        "rs/media/MediaViewerDescription",
        "rs/media/MediaViewerControl",
      ],
      function (t, e, i, s, n, o, r, a) {
        "use strict";
        function l(e, i) {
          (this.dopt = {
            containerWidth: 300,
            containerHeight: 250,
            scaleFactor: 0.8,
            showDuration: 900,
            hideDuration: 350,
            maxVisibleThumbnail: 12,
            useKeyboard: !0,
            thumbnailSize: 40,
            easing: "easeOutQuint",
            modal: !1,
            ajaxProcessor: function (t, e) {
              t.innerText = e.responseText;
            },
            audioPlayerOpt: {
              width: 300,
              height: 250,
              visual: !0,
              visualBg: "#333333",
              visualColor: "#ffff00",
            },
            videoPlayerOpt: {
              width: 300,
              height: 250,
              id: "mvVideoPlayer",
              dataSetup: {},
            },
          }),
            (i = i || {}),
            t.merge(i, this.dopt),
            this.build(e, i),
            this.dopt.useKeyboard && this.initKeyboard(),
            this.initPreloader();
          var s = this;
          window.addEventListener("resize", function (t) {
            s.resize();
          }),
            (this.state = l.CLOSE_STATE),
            (this.cidx = -1),
            (this.ccidx = -1);
        }
        e.getPrefix();
        return (
          (l.CLOSE_STATE = 0),
          (l.OPEN_STATE = 1),
          (l.prototype.parse = function (t) {
            return [];
          }),
          (l.prototype.initPreloader = function () {
            var t = new i({ borderColor: "#ccc" }),
              e = t.el;
            this.preloader = e;
          }),
          (l.prototype._showPreloader = function () {
            this.root.appendChild(this.preloader);
          }),
          (l.prototype._hidePreloader = function () {
            this.root.removeChild(this.preloader);
          }),
          (l.prototype.initKeyboard = function () {
            var t = this;
            window.addEventListener("keyup", function (e) {
              if (t.state !== l.CLOSE_STATE)
                switch (String(e.keyCode)) {
                  case "39":
                    t.next(), e.preventDefault();
                    break;
                  case "37":
                    t.prev(), e.preventDefault();
                    break;
                  case "27":
                    t.hide(), e.preventDefault();
                }
            });
          }),
          (l.prototype.build = function (t, e) {
            function i(t) {
              this._hidePreloader();
            }
            var s = ((this.root = document.createElement("div")), this);
            if (void 0 === t.firstChild) {
              (this.root = document.createElement("div")),
                (this.root.className = "rs-mediaviewer"),
                (this.data = t);
              for (var l = 0; l < t.length; l++)
                for (var h = t[l].items, d = 0; d < h.length; d++)
                  h[d].index = d;
            } else (this.root = t), (this.data = this.parse(t));
            this.dopt.modal &&
              ((this.root.style.background = "none"),
              (this.root.style.width = this.root.style.height = "auto")),
              (this.des = new r(this)),
              this.root.appendChild(this.des.el),
              (this.dialog = new o(this, i)),
              this.root.appendChild(this.dialog.el),
              (this.mbar = new n(this)),
              this.root.appendChild(this.mbar.el),
              (this.ctl = new a(this)),
              (this.ctl.closeBtn.onclick = function (t) {
                s.hide();
              }),
              (this.ctl.nextBtn.onclick = function (t) {
                s.next();
              }),
              (this.ctl.preBtn.onclick = function (t) {
                s.prev();
              }),
              this.root.appendChild(this.ctl.el);
          }),
          (l.prototype.target = function (t) {
            if ("number" == typeof t) this.doTarget(t);
            else {
              var e = parseInt(t.split(":")[0], 10),
                i = parseInt(t.split(":")[1], 10),
                s = this.ccidx === e;
              (this.ccidx = e), this.doTarget(i, s);
            }
          }),
          (l.prototype.doTarget = function (t, e) {
            if (
              !(this.inTransition || this.isLoading || (t === this.cidx && e))
            ) {
              var i = this.data[this.ccidx].items;
              if (t < i.length && t >= 0) {
                t === i.length - 1
                  ? (this.ctl.nextBtn.style.display = "none")
                  : (this.ctl.nextBtn.style.display = "block"),
                  this.root.dispatchEvent(
                    new CustomEvent(s.TARGET, {
                      detail: { catId: this.ccidx, id: t },
                    })
                  ),
                  (this.inTransition = !0),
                  (this.cidx = t);
                var n = i[t];
                this._showPreloader(),
                  this.state === l.CLOSE_STATE && this.show(),
                  this.mbar.currentCatId !== this.ccidx &&
                    this.mbar.loadThumbnails(this.ccidx),
                  this.des.setDescription(i[this.cidx].description),
                  this.dialog.setContent(t, n),
                  this.ctl.align(),
                  this.mbar.targetItem(t);
              }
            }
          }),
          (l.prototype.show = function () {
            document.body.appendChild(this.root),
              (this.root.style.display = "block"),
              (this.state = l.OPEN_STATE),
              this.dialog.show(),
              this.dopt.modal ||
                (this.mbar.setVisibleArea(),
                this.mbar.show(),
                this.des.show(),
                this.ctl.show());
          }),
          (l.prototype.hide = function () {
            this.isLoading ||
              this.inTransition ||
              ((this.state = l.CLOSE_STATE),
              this.ctl.hide(),
              this.mbar.hide(),
              this.des.hide(),
              this.dialog.hide(),
              (this.cidx = -1),
              (this.ccidx = -1),
              (this.dialog.lastItemId = -1),
              (this.inTransition = !1),
              this.root.dispatchEvent(new CustomEvent(s.EXIT)));
          }),
          (l.prototype.next = function () {
            this.target(this.cidx + 1);
          }),
          (l.prototype.prev = function () {
            this.target(this.cidx - 1);
          }),
          (l.prototype.addEventListener = function (t, e) {
            this.root.addEventListener(t, e);
          }),
          (l.prototype.resize = function (t) {
            this.mbar.setVisibleArea(), this.ctl.align(), this.dialog.resize();
          }),
          l
        );
      }
    ),
    i("rs/cs3d/CarouselStackState", [], function () {
      return { NORMAL: 0, EXTENDED: 1, DRAGGING: 2 };
    }),
    i("rs/cs3d/DataItem", ["rs/cs3d/CarouselStackState"], function (t) {
      "use strict";
      function e(t, e) {
        (this.cs3d = t),
          (this.title = e.title),
          (this.content = e.content),
          (this.link = e.link),
          (this.description = e.description),
          (this.thumbnail = e.thumbnail),
          (this.srcVal = e.src),
          (this.type = e.type),
          e.poster && (this.poster = e.poster),
          (this.extendedVal = e.extended),
          (this.index = e.index),
          (this.markup = e.markup);
      }
      return (
        Object.defineProperties(e.prototype, {
          src: {
            get: function () {
              return this.cs3d.state == t.NORMAL
                ? this.srcVal
                : this.extendedVal;
            },
          },
        }),
        e
      );
    }),
    i("rs/utils/MouseUtil", ["rs/utils/BrowserUtil"], function (t) {
      "use strict";
      function e(t) {
        t.preventDefault(),
          t.currentTarget.mouseWheelCallback.call(
            t.currentTarget.mousewheelContext,
            Math.max(-1, Math.min(1, t.wheelDelta || -t.detail))
          );
      }
      return {
        touchClick: function (e, i) {
          t.isMobile()
            ? e.addEventListener("touchstart", i)
            : e.addEventListener("click", i);
        },
        removeTouchClick: function (e, i) {
          t.isMobile()
            ? e.removeEventListener("touchstart", i)
            : e.removeEventListener("click", i);
        },
        startMouseWheel: function (t, i, s) {
          (t.mouseWheelCallback = i),
            (t.mousewheelContext = s),
            t.addEventListener("DOMMouseScroll", e, !1),
            t.addEventListener("mousewheel", e, !1);
        },
        stopMouseWheel: function (t) {
          t.removeEventListener("DOMMouseScroll", e),
            t.removeEventListener("mousewheel", e);
        },
        swipeStart: function (e, i, s, n, o) {
          function r(t) {
            (p = t.clientX),
              (f = t.clientY),
              (m = new Date().getTime()),
              e.addEventListener("mousemove", l),
              window.addEventListener("mouseup", h);
          }
          function a(t) {
            e.removeEventListener("mousemove", l),
              window.removeEventListener("mouseup", h),
              e.removeEventListener("mouseout", a);
          }
          function l(e) {
            var i = e.clientX - p,
              r = e.clientY - f;
            (t.swipeState = "move"),
              Math.abs(i) > Math.abs(r) ? n(i * s) : o(r * s);
          }
          function h(t) {
            e.removeEventListener("mousemove", l),
              window.removeEventListener("mouseup", h);
          }
          function d(t) {
            (p = t.touches[0].clientX),
              (f = t.touches[0].clientY),
              (m = new Date().getTime()),
              e.addEventListener("touchmove", c),
              window.addEventListener("touchend", u);
          }
          function c(e) {
            e.preventDefault();
            var i = e.changedTouches[0].clientX - p,
              r = e.changedTouches[0].clientY - f;
            (t.swipeState = "move"),
              Math.abs(i) > Math.abs(r) ? n(i * s) : o(r * s);
          }
          function u(t) {
            e.removeEventListener("touchmove", c),
              window.removeEventListener("touchend", u);
          }
          var p, f, m;
          (e.style[t.getPrefix() + "UserSelect"] = "none"),
            (e.removeTracking = function () {
              e.removeEventListener("mousedown", r),
                window.removeEventListener("mouseup", h),
                e.removeEventListener("mousemove", l),
                e.removeEventListener("mouseout", a),
                e.removeEventListener("touchstart", d),
                e.removeEventListener("touchend", u),
                e.removeEventListener("touchmove", c),
                (e.removeTracking = null);
            }),
            t.isMobile()
              ? e.addEventListener("touchstart", d)
              : e.addEventListener("mousedown", r);
        },
        swipeStop: function (e) {
          (e.style[t.getPrefix() + "UserSelect"] = "all"),
            e.removeTracking && e.removeTracking();
        },
      };
    }),
    i(
      "rs/ui/GalleryScrollbar",
      ["rs/utils/ObjectUtil", "rs/utils/BrowserUtil", "rs/utils/MouseUtil"],
      function (t, e, i) {
        "use strict";
        function s(i, s) {
          (this.dopt = {
            barWidth: 300,
            minScrubberWidth: 50,
            steps: 5,
            barHeight: 18,
            roundCorner: 16,
            borderColor: "#999",
          }),
            t.merge(i, this.dopt),
            (this.callback = s),
            (this._value = 0),
            e.isMobile()
              ? ((r = "touchstart"), (a = "touchend"), (l = "touchmove"))
              : ((r = "mousedown"), (a = "mouseup"), (l = "mousemove")),
            this.build();
        }
        function n(t, e) {
          var i = t.sc,
            s = Math.floor(t.width / e);
          s < t.dopt.minScrubberWidth && (s = t.dopt.minScrubberWidth),
            (i.width = s),
            (i.style.width = i.width + "px");
        }
        function o(t, e) {
          var i = t.bar;
          t.el.style.width = i.style.width = e + "px";
        }
        var r,
          a,
          l,
          h = e.getPrefix();
        return (
          (s.prototype.build = function () {
            function t(t) {
              var e;
              e = t.changedTouches ? t.changedTouches[0].clientX : t.clientX;
              var i = (e - u) / (f.width - c.width);
              f.value = p + i;
            }
            function e(i) {
              (document.body.style[h + "UserSelect"] = "auto"),
                window.removeEventListener(l, t),
                window.removeEventListener(a, e);
            }
            var i = this.dopt;
            (this.width = i.barWidth), (this._steps = i.steps);
            var s = (this.el = document.createElement("div"));
            (s.className = "rs-ui-gsbar"),
              (s.style.height = i.barHeight + "px"),
              (s.style.borderRadius = i.roundCorner + "px");
            var d = document.createElement("div");
            (d.style.height = i.barHeight + "px"),
              s.appendChild(d),
              (this.bar = d),
              o(this, i.barWidth);
            var c = document.createElement("span");
            (c.style.height = i.barHeight + "px"),
              (c.style.borderRadius = i.roundCorner + "px"),
              (this.sc = c),
              s.appendChild(c),
              n(this, i.steps);
            var u,
              p,
              f = this;
            c.addEventListener(r, function (i) {
              i.preventDefault();
              var s;
              s = i.touches ? i.touches[0].clientX : i.clientX;
              f.width, c.width;
              (document.body.style[h + "UserSelect"] = "none"),
                (u = s),
                (p = f.value),
                window.addEventListener(l, t),
                window.addEventListener(a, e);
            }),
              d.addEventListener("click", function (t) {
                var e = (t.offsetX - 0.5 * c.width) / (f.width - c.width);
                (e = e > 1 ? 1 : e < 0 ? 0 : e), (f.value = e);
              });
          }),
          Object.defineProperties(s.prototype, {
            barWidth: {
              get: function () {
                return this._barWidth;
              },
              set: function (t) {
                (this._barWidth = this.width = t),
                  o(this, t),
                  n(this, this.steps);
              },
            },
            steps: {
              get: function () {
                return this._steps;
              },
              set: function (t) {
                (this._steps = t), n(this, t), (this.value = 0);
              },
            },
            value: {
              get: function () {
                return this._value;
              },
              set: function (t) {
                this.applyValue(t),
                  "number" == typeof t &&
                    t >= 0 &&
                    t <= 1 &&
                    this.callback &&
                    this.callback.call(this, t);
              },
            },
          }),
          (s.prototype.applyValue = function (t) {
            "number" == typeof t &&
              t >= 0 &&
              t <= 1 &&
              ((this._value = t),
              (this.sc.style.left = (this.width - this.sc.width) * t + "px"));
          }),
          s
        );
      }
    ),
    i("rs/cs3d/Cs3dScrollbar", ["rs/ui/GalleryScrollbar"], function (t) {
      "use strict";
      function e(e, i) {
        t.call(this, e, i);
      }
      return (
        (e.prototype = Object.create(t.prototype)),
        (e.prototype.constructor = e),
        (e.prototype.hide = function () {
          this.el.style.display = "none";
        }),
        (e.prototype.show = function () {
          this.el.style.display = "block";
        }),
        e
      );
    }),
    i("rs/cs3d/ButtonNavigator", ["rs/utils/MouseUtil"], function (t) {
      "use strict";
      function e(t, e) {
        this.build(t, e), this.hide("left");
      }
      return (
        (e.prototype.build = function (t, e) {
          (this.lBtn = this.makeButton("icon-cheveron-left rs-cs3d-lbn", t)),
            (this.rBtn = this.makeButton("icon-cheveron-right rs-cs3d-rbn", e));
        }),
        (e.prototype.makeButton = function (e, i) {
          var s = document.createElement("span");
          return (s.className = e + " rs-cs3d-bnav"), t.touchClick(s, i), s;
        }),
        (e.prototype.hide = function (t) {
          "left" == t
            ? (this.lBtn.style.display = "none")
            : "right" == t && (this.rBtn.style.display = "none");
        }),
        (e.prototype.show = function (t) {
          "left" == t
            ? (this.lBtn.style.display = "block")
            : "right" == t && (this.rBtn.style.display = "block");
        }),
        (e.prototype.showAll = function () {
          this.show("left"), this.show("right");
        }),
        (e.prototype.hideAll = function () {
          this.hide("left"), this.hide("right");
        }),
        (e.prototype.reAlign = function (t) {
          this.lBtn.style.top = this.rBtn.style.top = t[1] + "%";
        }),
        e
      );
    }),
    i("rs/cs3d/ButtonList", ["rs/utils/MouseUtil"], function (t) {
      "use strict";
      function e(t) {
        (this._length = 0), this.build(t);
      }
      return (
        (e.prototype.build = function (e) {
          var i = document.createElement("div");
          (i.className = "rs-cs3d-blist"),
            (this.el = i),
            (this.style = i.style),
            t.touchClick(i, function (t) {
              void 0 !== t.target.index && e.call(this, t.target.index);
            });
        }),
        (e.prototype.setLength = function (t) {
          this._length = t;
          this.lastSelected = null;
          for (var e = this.el.firstChild; e; )
            this.el.removeChild(e), (e = this.el.firstChild);
          for (var i = 0; i < t; i++) {
            var s = document.createElement("span");
            (s.index = i), this.el.appendChild(s);
          }
        }),
        (e.prototype.setSelected = function (t) {
          null !== this.lastSelected &&
            this.lastSelected.classList.remove("button-selected");
          var e = this.el.children[t];
          e.classList.add("button-selected"), (this.lastSelected = e);
        }),
        (e.prototype.show = function () {
          this.style.display = "block";
        }),
        (e.prototype.hide = function () {
          this.style.display = "none";
        }),
        e
      );
    }),
    i("rs/cs3d/TextDisplay", [], function () {
      "use strict";
      function t(t, e) {
        this.build(t, e);
      }
      return (
        (t.prototype.build = function (t, e) {
          var i = document.createElement(t);
          (i.innerHTML = "Text Display"),
            (i.className = "rs-cs3d-textdisplay " + e),
            (this.el = i),
            (this.style = i.style);
        }),
        (t.prototype.show = function (t) {
          this.hide(), (t = t || ""), (this.el.innerHTML = t);
        }),
        (t.prototype.hide = function () {
          this.style.display = "none";
        }),
        (t.prototype.reAlign = function () {}),
        t
      );
    }),
    i("rs/cs3d/ItemDescription", ["rs/cs3d/TextDisplay"], function (t) {
      "use strict";
      function e() {
        this.build("div", "rs-cs3d-description");
      }
      return (
        (e.prototype = Object.create(t.prototype)),
        (e.prototype.constructor = e),
        (e.prototype.show = function (e) {
          t.prototype.show.call(this, e),
            anime.remove(this.el),
            anime({
              targets: this.el,
              opacity: [0, 1],
              duration: 2e3,
              delay: 600,
            }),
            (this.style.display = "block");
        }),
        e
      );
    }),
    i("rs/cs3d/ItemTitle", ["rs/cs3d/TextDisplay"], function (t) {
      "use strict";
      function e() {
        this.build("h3", "rs-cs3d-title");
      }
      return (
        (e.prototype = Object.create(t.prototype)),
        (e.prototype.constructor = e),
        (e.prototype.show = function (e) {
          t.prototype.show.call(this, e),
            anime.remove(this.el),
            anime({
              targets: this.el,
              opacity: [0, 1],
              duration: 1500,
              delay: 400,
            }),
            (this.style.display = "block");
        }),
        e
      );
    }),
    i("rs/ui/CProgressButton", [], function () {
      "use strict";
      function t(t) {
        this.build(t);
      }
      (t.prototype.build = function (t) {
        t || (t = {}),
          (this.radius = t.radius || 20),
          (this.duration = t.duration || 3e3),
          (this.lineWidth = t.lineWidth || 4),
          (this.frontColor = t.frontColor || "blue"),
          (this.backColor = t.backColor || "#ccc"),
          (this.loop = !1 !== t.loop),
          (this.size = 2 * (this.radius + this.lineWidth));
        var e = (this.el = document.createElement("div"));
        (e.className = "rs-cprogressbtn"),
          (this.style = e.style),
          (e.style.width = e.style.height = this.size + "px");
        var i = (this.pbtn = document.createElement("canvas"));
        (i.width = i.height = this.size), e.appendChild(i);
        var s = (this.cp = document.createElement("canvas"));
        (s.width = s.height = this.size), e.appendChild(s), this.stop();
        var n = this;
        e.addEventListener("click", function (t) {
          n.playing ? n.stop() : n.start();
        });
      }),
        (t.prototype.start = function () {
          this.playing = !0;
          var t = this.size,
            e = this.pbtn.getContext("2d");
          e.clearRect(0, 0, t, t),
            (e.fillStyle = this.frontColor),
            e.fillRect(t / 3, t / 3, t / 3, t / 3),
            (this.st0 = new Date()),
            (this.callId = requestAnimationFrame(this.update.bind(this)));
        }),
        (t.prototype.stop = function () {
          this.playing = !1;
          var t = this.size,
            e = this.pbtn.getContext("2d");
          e.clearRect(0, 0, t, t),
            (e.fillStyle = this.frontColor),
            e.beginPath(),
            e.moveTo(t / 2.8, t / 2.8),
            e.lineTo((2 * t) / 3, t / 2),
            e.lineTo(t / 2.8, (2 * t) / 3),
            e.closePath(),
            e.fill();
          var i = 0.5 * t,
            s = this.cp.getContext("2d");
          s.clearRect(0, 0, t, t),
            (s.strokeStyle = this.backColor),
            (s.lineWidth = this.lineWidth),
            s.beginPath(),
            s.arc(i, i, this.radius, 0, 2 * Math.PI),
            s.stroke(),
            cancelAnimationFrame(this.callId);
        });
      var e = 0.5 * Math.PI,
        i = 2 * Math.PI,
        s = 1.5 * Math.PI;
      return (
        (t.prototype.update = function () {
          var t = this.cp.getContext("2d"),
            n = ((new Date() - this.st0) / this.duration) * i - e;
          n > s && (this.st0 = new Date()),
            t.clearRect(0, 0, this.size, this.size);
          var o = 0.5 * this.size;
          (t.strokeStyle = this.backColor),
            (t.lineWidth = this.lineWidth),
            t.beginPath(),
            t.arc(o, o, this.radius, 0, i),
            t.stroke(),
            (t.strokeStyle = this.frontColor),
            (t.lineWidth = this.lineWidth),
            t.beginPath(),
            t.arc(o, o, this.radius, -e, n),
            t.stroke(),
            (this.callId = requestAnimationFrame(this.update.bind(this))),
            n > s && !this.loop && this.stop();
        }),
        (t.prototype.reset = function () {
          this.st0 = new Date();
        }),
        (t.prototype.show = function () {
          this.style.display = "block";
        }),
        (t.prototype.hide = function () {
          this.style.display = "none";
        }),
        t
      );
    }),
    i("rs/cs3d/CategoryMenu", ["rs/utils/MouseUtil"], function (t) {
      "use strict";
      function e(t, e) {
        this.build(t, e);
      }
      return (
        (e.prototype.build = function (e, i) {
          function s(t) {
            anime.remove(h), l ? ((l = !1), o.pull()) : ((l = !0), o.push());
          }
          function n(t) {
            s(),
              t.target.index != o.cidx &&
                ((o.cidx = t.target.index),
                (a.innerHTML = t.target.innerHTML),
                i.call(o, o.cidx));
          }
          var o = this,
            r = document.createElement("div");
          (r.className = "rs-cs3d-cmenu"),
            (this.style = r.style),
            (this.cidx = 0);
          var a = document.createElement("a");
          (this.tlb = a),
            (a.className = "rs-cs3d-toplabel"),
            (a.innerHTML = "Gallery");
          var l = !1;
          t.touchClick(a, s), r.appendChild(a);
          var h = document.createElement("ul");
          (this.list = h),
            (h.className = "rs-cs3d-clist"),
            (h.style.display = "none"),
            (h.style.opacity = 0),
            (h.style.transform = "translateY(-15px)"),
            r.appendChild(h);
          for (var d = 0; d < e.length; d++) {
            var c = document.createElement("li");
            (c.innerHTML = e[d].name),
              (c.index = d),
              t.touchClick(c, n),
              h.appendChild(c);
          }
          (this.el = r), (this.tlb = a), (this.list = h);
        }),
        (e.prototype.setTopLabel = function (t) {
          this.tlb.innerHTML = t;
        }),
        (e.prototype.setActive = function (t) {
          console.log(t);
        }),
        (e.prototype.pull = function () {
          var t = this.list;
          anime({
            targets: t,
            duration: 1200,
            opacity: 0,
            translateY: -15,
            complete: function (e) {
              t.style.display = "none";
            },
          });
        }),
        (e.prototype.push = function () {
          var t = this.list;
          (t.style.display = "block"),
            anime({ targets: t, duration: 1200, opacity: 1, translateY: 0 });
        }),
        (e.prototype.show = function () {
          this.style.display = "block";
        }),
        (e.prototype.hide = function () {
          this.style.display = "none";
        }),
        e
      );
    }),
    i("rs/cs3d/HCategoryMenu", ["rs/utils/MouseUtil"], function (t) {
      "use strict";
      function e(t, e) {
        this.build(t, e);
      }
      return (
        (e.prototype.build = function (e, i) {
          function s(t) {
            t.target.index != n.cidx &&
              (n.setActive(t.target.index), i.call(n, n.cidx));
          }
          var n = this,
            o = (this.el = document.createElement("ul"));
          (o.className = ""), (this.style = o.style), (this.cidx = 0);
          for (var r = 0; r < e.length; r++) {
            var a = document.createElement("li");
            (a.innerHTML = e[r].name),
              (a.index = r),
              t.touchClick(a, s),
              o.appendChild(a),
              e.length > 1 &&
                (0 == r
                  ? (a.style.borderTopRightRadius =
                      a.style.borderBottomRightRadius =
                        "0px")
                  : r == e.length - 1
                  ? (a.style.borderTopLeftRadius =
                      a.style.borderBottomLeftRadius =
                        "0px")
                  : (a.style.borderRadius = "0px"));
          }
          1 == e.length && (this.isSingle = !0);
        }),
        (e.prototype.setActive = function (t) {
          this.currentItem && this.currentItem.classList.remove("active-item"),
            (this.cidx = t);
          var e = this.el.children[t];
          (this.currentItem = e), e.classList.add("active-item");
        }),
        (e.prototype.show = function () {
          this.isSingle || (this.style.display = "block");
        }),
        (e.prototype.hide = function () {
          this.style.display = "none";
        }),
        e
      );
    }),
    i(
      "rs/cs3d/FullscreenButton",
      ["rs/utils/BrowserUtil", "rs/utils/MouseUtil"],
      function (t, e) {
        "use strict";
        function i(t, e) {
          (this.targetEl = t), this.build("icon--full", e);
        }
        return (
          (i.prototype.build = function (i, s) {
            var n = this,
              o = this.targetEl,
              r = (this.el = document.createElement("span"));
            (r.className = i + " rs-cs3d-fsbtn"),
              e.touchClick(r, function (e) {
                t.isFullscreen() ? t.exitFullscreen(o) : t.goFullscreen(o);
              }),
              t.fullScreenCallback(o, function () {
                t.isFullscreen() ? n.setFull() : n.setNormal(), s.call(o);
              });
          }),
          (i.prototype.setFull = function () {
            this.el.classList.remove("icon--full"),
              this.el.classList.add("icon-screen-normal");
          }),
          (i.prototype.setNormal = function () {
            this.el.classList.remove("icon-screen-normal"),
              this.el.classList.add("icon--full");
          }),
          i
        );
      }
    ),
    i("rs/cs3d/ZoomButton", [], function () {
      "use strict";
      function t(t) {
        this.build(t, t.defaultOptions);
      }
      return (
        (t.prototype.build = function (t, e) {
          var i = (this.el = document.createElement("span"));
          i.className = "rs-cs3d-zoombtn icon-add-outline";
          var s = i.style;
          (s.left = "50%"),
            (s.top = e.origins[1] + "%"),
            i.addEventListener("mouseover", function (t) {
              anime.remove(i),
                (i.style.opacity = 1),
                (i.style.display = "block");
            });
        }),
        (t.prototype.show = function () {
          (this.el.style.opacity = 1), (this.el.style.display = "block");
        }),
        (t.prototype.hide = function () {
          (this.el.style.display = "none"), (this.el.style.opacity = 0);
        }),
        t
      );
    }),
    i("rs/utils/Tween", ["rs/utils/BrowserUtil"], function (t) {
      "use strict";
      function e(t) {
        var e = "",
          n = "";
        "transformExpression" in t && (e = t.transformExpression + " ");
        for (var o in t)
          o in s
            ? (e = e + o + "(" + t[o] + s[o] + ") ")
            : "start" != o &&
              "transformExpression" != o &&
              ((n += "" !== n ? ", " + o : o), $(this).css(o, t[o]));
        if ("" !== e)
          if (void 0 !== this.style.transform)
            (this.style.transform = e),
              "" !== n ? (n += ", transform") : (n = "transform");
          else {
            this.style[i + "Transform"] = e;
            var r = "-" + i.toLowerCase() + "-transform";
            "" !== n ? (n += ", " + r) : (n = r);
          }
        return n;
      }
      var i = t.getPrefix(),
        s = {
          rotate: "deg",
          rotateX: "deg",
          rotateY: "deg",
          rotateZ: "deg",
          translateX: "px",
          translateY: "px",
          translateZ: "px",
          scale: "",
          scaleX: "",
          scaleY: "",
          skew: "deg",
          skewX: "deg",
          skewY: "deg",
        };
      return function (t, s, n, o, r) {
        n || (n = 1),
          o || (o = "ease-out"),
          r || (r = 0),
          s.start && e.call(t, s.start),
          clearTimeout(t.fwtweenID);
        var a;
        return (
          (a = void 0 !== t.style.transition ? "transition" : i + "Transition"),
          setTimeout(function () {
            (t.style[a + "Property"] = e.call(t, s)),
              (t.style[a + "TimingFunction"] = o),
              (t.style[a + "Duration"] = n + "s"),
              (t.style[a + "Delay"] = r + "s");
          }, 10),
          (t.fwtweenID = setTimeout(function () {
            (t.style[a + "Property"] = ""), (t.style[a + "Duration"] = "0s");
          }, 1e3 * (n + r))),
          this
        );
      };
    }),
    i(
      "rs/cs3d/Gallery2dItem",
      ["rs/utils/Tween", "rs/utils/BrowserUtil"],
      function (t, e) {
        "use strict";
        function i(t) {
          this.build(t);
        }
        var s = e.getPrefix(),
          n = s + "Transform";
        return (
          (i.prototype.build = function (t) {
            this.config = t;
            var e = this,
              i = (this.element = this.el = document.createElement("img"));
            (i.src = t.src), (this.index = t.index);
            var s = i.style;
            (s.border = t.borderStyle),
              (s.position = "absolute"),
              (s.cursor = "pointer"),
              (s.display = "none"),
              t.ovalShape
                ? (s.borderRadius = "50%")
                : (s.borderRadius = t.roundCorner + "px");
            var n = t.constraint;
            i.addEventListener("load", function (s) {
              var o = i.width,
                r = i.height,
                a = o / r;
              a > 1
                ? o > n && ((o = n), (r = o / a))
                : r > n && ((r = n), (o = r * a)),
                (i.width = o),
                (i.height = r),
                (i.style.top = 0.5 * -i.height + "px"),
                (i.style.left = 0.5 * -i.width + "px"),
                void 0 !== t.itemShadow && (i.style.boxShadow = t.itemShadow),
                t.onLoadCallback.call(e);
            });
          }),
          (i.prototype.setScale = function (t) {
            this.el.style[n] = "scale(" + t + ")";
          }),
          (i.prototype.setPosition = function (e) {
            var i = this.config,
              s = this.index - e,
              n = Math.abs(s),
              o = i.minScale;
            n <= i.rangeCount &&
              (o =
                (1 - n / i.rangeCount) * (i.maxScale - i.minScale) +
                i.minScale);
            var r = this.el.style;
            r.zIndex = s >= 0 ? this.config.count - s + 100 : s + 100;
            new t(
              this.el,
              { scale: o, translateX: s * i.distance },
              0.8,
              "cubic-bezier(0.00, 0.00, 0.23, 1)"
            );
          }),
          i
        );
      }
    ),
    i(
      "rs/cs3d/Gallery2d",
      ["rs/cs3d/Gallery2dItem", "rs/utils/ObjectUtil", "rs/utils/BrowserUtil"],
      function (t, e, i) {
        "use strict";
        function s(t, e) {
          (this.data = t),
            (this.catRef = []),
            (this.cidx = 0),
            (this.dopt = e),
            this.buildScene();
        }
        var n = i.getPrefix();
        return (
          (s.prototype.buildScene = function () {
            var t = (this.el = document.createElement("div"));
            (t.style.position = "absolute"),
              (t.style.overflow = "hidden"),
              (t.style[n + "UserSelect"] = "none"),
              (t.className = "rs-smoothgal rs-gal2d");
            var e = this.dopt.origins,
              i = (this.container = document.createElement("div"));
            (i.style.position = "absolute"),
              (i.style.top = e[1] + "%"),
              (i.style.left = e[0] + "%"),
              t.appendChild(i);
          }),
          (s.prototype.target = function (t) {
            var e = this.catRef[this.ccidx];
            if (
              (this.dopt.loop &&
                (t < 0 && (t += e.length), t >= e.length && (t -= e.length)),
              t >= 0 && t < this.data[this.ccidx].items.length)
            ) {
              this.dopt;
              this.cidx = t;
              for (var i = 0; i < e.length; i++) {
                e[i].setPosition(t);
              }
            }
          }),
          (s.prototype.addAll = function (t) {
            var e = this.catRef[t];
            if (void 0 !== e)
              for (var i = 0; i < e.length; i++)
                this.container.appendChild(e[i].el);
          }),
          (s.prototype.removeAll = function () {
            for (var t = this.catRef[this.ccidx], e = 0; e < t.length; e++)
              this.container.removeChild(t[e].el);
          }),
          (s.prototype.buildGallery = function (e, i, s) {
            var n = this.dopt,
              o = [];
            this.catRef[e] = o;
            for (var r = i.items, a = (i.name, 0); a < r.length; a++) {
              var l = new t({
                src: r[a].src,
                index: a,
                count: r.length,
                minScale: n.minScale,
                maxScale: n.maxScale,
                rangeCount: n.rangeCount,
                distance: n.distance,
                itemShadow: n.itemShadow,
                ovalShape: n.ovalShape,
                roundCorner: n.roundCorner,
                borderStyle: n.borderStyle,
                constraint: n.constraint,
                onLoadCallback: s,
              });
              o.push(l), this.container.appendChild(l.el);
            }
          }),
          (s.prototype.open = function (t) {
            for (
              var e = (this.dopt, this.catRef[this.ccidx]), i = this, s = 0;
              s < e.length;
              s++
            ) {
              var n = e[s];
              (n.el.style.display = "block"), n.setScale(0), n.setPosition(0);
            }
            setTimeout(function () {
              t.call(i);
            }, 1200);
          }),
          (s.prototype.close = function (t) {
            var e = this.catRef[this.ccidx];
            if (void 0 != e) {
              for (var i = this, s = 0; s < e.length; s++)
                anime({
                  targets: e[s].el,
                  duration: 1200,
                  easing: "easeOutQuint",
                  scale: 0,
                  translateX: 0,
                });
              setTimeout(function () {
                t.call(i);
              }, 1200);
            }
          }),
          (s.prototype.resize = function (t, e) {
            for (
              var s = i.bp,
                n = ["XS", "SM", "MD", "LG", "XL"],
                o = n.length - 1;
              o >= 0 && !(t >= s[n[o]]);
              o--
            );
            this.container.style.transform =
              "scale(" + this.dopt.responsive[n[o]] + ")";
          }),
          (s.prototype.destroy = function () {
            console.log("Destroy gallery");
          }),
          s
        );
      }
    ),
    i("rs/css3d/Object3D", ["rs/utils/BrowserUtil"], function (t) {
      "use strict";
      function e(t, e, i) {
        this.init(t, e, i);
      }
      var i = t.getPrefix(),
        s = i + "Transform",
        n = i + "TransformOrigin";
      return (
        Object.defineProperties(e.prototype, {
          visible: {
            get: function () {
              return this._visible;
            },
            set: function (t) {
              (this._visible = t), (this.style.display = t ? "block" : "none");
            },
          },
          hidden: {
            get: function () {
              return this._hidden;
            },
            set: function (t) {
              (this._hidden = t),
                (this.style.visibility = t ? "hidden" : "visible");
            },
          },
          zIndex: {
            get: function () {
              return this._zIndex;
            },
            set: function (t) {
              (this._zIndex = t), (this.style.zIndex = t);
            },
          },
          backface: {
            get: function () {
              return this._backface;
            },
            set: function (t) {
              this.style[i + "BackfaceVisibility"] = this._backface = t;
            },
          },
          alpha: {
            get: function () {
              return this._alpha;
            },
            set: function (t) {
              this.style.opacity = this._alpha = t;
            },
          },
          translateX: {
            get: function () {
              return this._translateX;
            },
            set: function (t) {
              (this._translateX = t), this.replace("translateX", t, "px");
            },
          },
          translateY: {
            get: function () {
              return this._translateY;
            },
            set: function (t) {
              (this._translateY = t), this.replace("translateY", t, "px");
            },
          },
          translateZ: {
            get: function () {
              return this._translateZ;
            },
            set: function (t) {
              (this._translateZ = t), this.replace("translateZ", t, "px");
            },
          },
          rotateX: {
            get: function () {
              return this._rotateX;
            },
            set: function (t) {
              (this._rotateX = t), this.replace("rotateX", t, "deg");
            },
          },
          rotateY: {
            get: function () {
              return this._rotateY;
            },
            set: function (t) {
              (this._rotateY = t), this.replace("rotateY", t, "deg");
            },
          },
          rotateZ: {
            get: function () {
              return this._rotateZ;
            },
            set: function (t) {
              (this._rotateZ = t), this.replace("rotateZ", t, "deg");
            },
          },
          scale: {
            get: function () {
              return this._scale;
            },
            set: function (t) {
              (this._scale = t), this.replace("scale", t, "");
            },
          },
          originX: {
            get: function () {
              return this._originX;
            },
            set: function (t) {
              (this._originX = t),
                void 0 !== this._originY &&
                  (this.style[n] =
                    100 * this.originX + "% " + 100 * this.originY + "%");
            },
          },
          originY: {
            get: function () {
              return this._originY;
            },
            set: function (t) {
              (this._originY = t),
                void 0 !== this._originX &&
                  (this.style[n] =
                    100 * this.originX + "% " + 100 * this.originY + "%");
            },
          },
          transform: {
            get: function () {
              return this._transform;
            },
            set: function (t) {
              (this._transform = t), (this.style[s] = t);
            },
          },
        }),
        (e.prototype.element = null),
        (e.prototype.style = null),
        (e.prototype.init = function (e, n, o) {
          e &&
            ((this.element =
              "string" == typeof e ? document.createElement(e) : e),
            (this.style = this.element.style),
            (this.style[i + "UserSelect"] = "none"),
            t.css(this.element, {
              position: "absolute",
              display: "block",
              top: 0,
              left: 0,
            }),
            (this.backface = "visible"),
            (this.style[s] = ""),
            (this._alpha = 1),
            (this._translateX = this._translateY = this._translateZ = 0),
            (this._rotateX = this._rotateY = this._rotateZ = 0),
            (this._scale = 1),
            (this._originX = this._originY = 0.5),
            void 0 !== n && (this.originX = n),
            void 0 !== o && (this.originY = o));
        }),
        (e.prototype.selfAlign = function () {
          this.pWidth
            ? ((this.style.top = 0.5 * -this.pHeight + "px"),
              (this.style.left = 0.5 * -this.pWidth + "px"))
            : ((this.style.top = 0.5 * -this.element.clientHeight + "px"),
              (this.style.left = 0.5 * -this.element.clientWidth + "px"));
        }),
        (e.prototype.reset = function () {
          this.style[s] = "";
        }),
        (e.prototype.replace = function (t, e, i) {
          var n = this.style[s];
          (n =
            -1 === n.indexOf(t)
              ? n + t + "(" + e + i + ")"
              : n.replace(new RegExp(t + "\\([0-9.-]*"), t + "(" + e)),
            (this.style[s] = n);
        }),
        (e.prototype.translate3d = function (t, e, i) {
          (this.translateX = t), (this.translateY = e), (this.translateZ = i);
        }),
        (e.prototype.toString = function () {
          return "Object3D";
        }),
        e
      );
    }),
    i(
      "rs/css3d/Container3D",
      ["rs/css3d/Object3D", "rs/utils/BrowserUtil"],
      function (t, e) {
        "use strict";
        function i() {
          this.init();
        }
        (i.prototype = Object.create(t.prototype)),
          (i.prototype.constructor = i);
        var s = e.getPrefix();
        return (
          Object.defineProperties(i.prototype, {
            children: {
              get: function () {
                return this._children;
              },
              set: function (t) {
                this._children = t;
              },
            },
          }),
          (i.prototype.init = function () {
            t.prototype.init.call(this, "div"),
              (this.width = this.height = 1),
              (this.style[s + "TransformStyle"] = "preserve-3d"),
              (this.children = []);
          }),
          (i.prototype.addChild = function (t) {
            this.children.push(t),
              this.element.appendChild(t.element),
              this.selfAlign();
          }),
          (i.prototype.removeChild = function (t) {
            t.element.parentNode === this.element &&
              this.element.removeChild(t.element);
            this.children.indexOf(t);
            this.children.splice(this.children.indexOf(t), 1);
          }),
          (i.prototype.selfAlign = function () {
            t.prototype.selfAlign.call(this);
            for (var e = 0; e < this.children.length; e += 1)
              this.children[e].selfAlign();
          }),
          (i.prototype.toString = function () {
            return "Container3D";
          }),
          i
        );
      }
    ),
    i("rs/css3d/Plane", ["rs/css3d/Object3D"], function (t) {
      "use strict";
      function e(t, e, i) {
        this.init(t, e, i);
      }
      return (
        (e.prototype = Object.create(t.prototype)),
        (e.prototype.constructor = e),
        (e.prototype.init = function (e, i, s) {
          if (
            (t.prototype.init.call(this, e),
            (this.style.width = i + "px"),
            (this.style.height = s + "px"),
            (this.pWidth = i),
            (this.pHeight = s),
            this.selfAlign(),
            "img" === e)
          ) {
            var n = this;
            this.element.addEventListener("load", function (t) {
              (this.width = i), (this.height = s), n.selfAlign();
            });
          }
        }),
        (e.prototype.toString = function () {
          return "Plane";
        }),
        e
      );
    }),
    i("rs/utils/ImageUtil", ["rs/utils/ObjectUtil"], function (t) {
      "use strict";
      return {
        createReflection: function (t, e) {
          if (void 0 === t) throw "Invalid input image";
          void 0 === e && (e = [0, 0.5, 0.4, 0.25, 1, 0]);
          var i = t.width,
            s = t.height,
            n = document.createElement("canvas");
          (n.width = i), (n.height = s);
          for (
            var o = n.getContext("2d"),
              r = o.createLinearGradient(0, 0, 0, s),
              a = 0.5 * e.length,
              l = 0;
            l < a;
            l++
          )
            r.addColorStop(e[2 * l], "rgba(0, 0, 0, " + e[2 * l + 1] + ")");
          (o.fillStyle = r),
            o.fillRect(0, 0, i, s),
            (o.globalCompositeOperation = "source-in"),
            o.translate(0, t.height),
            o.scale(1, -1),
            o.drawImage(t, 0, 0);
          var h = document.createElement("img");
          return (h.src = n.toDataURL()), h;
        },
      };
    }),
    i(
      "rs/cs3d/Gallery3dItem",
      [
        "rs/css3d/Container3D",
        "rs/css3d/Plane",
        "rs/utils/Tween",
        "rs/utils/ImageUtil",
      ],
      function (t, e, i, s) {
        "use strict";
        function n(e, i, s) {
          t.prototype.constructor.call(this),
            (this.info = e),
            (this.index = e.index),
            (this.onLoadCallback = s),
            (this.gal = i),
            this.build(e, i.dopt);
        }
        return (
          (n.prototype = Object.create(t.prototype)),
          (n.prototype.constructor = n),
          Object.defineProperties(n.prototype, {
            enableRef: {
              get: function () {
                return this._enableRef;
              },
              set: function (t) {
                (this._enableRef = t),
                  this.gal.dopt.useReflection &&
                    (this.upperInnerRef.hidden = !t);
              },
            },
            alpha: {
              get: function () {
                return this._alpha;
              },
              set: function (t) {
                this.img.style.opacity = this._alpha = t;
              },
            },
          }),
          (n.prototype.build = function (i, n) {
            var o = this;
            if (
              ((o.element.style.zIndex = 999 - this.info.index),
              (o.upper = new t()),
              i.src)
            ) {
              o.element.style.cursor = "pointer";
              var r = document.createElement("img");
              (r.src = i.src),
                (r.style.display = "none"),
                n.ovalShape
                  ? (r.style.borderRadius = "50%")
                  : (r.style.borderRadius = n.roundCorner + "px"),
                (o.img = r);
              var a = n.normalHeight;
              r.addEventListener("load", function (t) {
                var i;
                n.useReflection && (i = s.createReflection(r, n.refParams)),
                  (r.style.boxSizing = "border-box"),
                  void 0 !== n.borderStyle && (r.style.border = n.borderStyle),
                  void 0 !== n.itemShadow && (r.style.boxShadow = n.itemShadow),
                  (r.width =
                    a * ((t.target.width + 10) / (t.target.height + 10))),
                  (r.height = a);
                var l = r.width,
                  h = r.height;
                (o.width = l),
                  (o.upperInner = new e(r, l, h)),
                  o.upper.addChild(o.upperInner),
                  (o.upperInner.translateY = 0.5 * -h),
                  (o.upper.translateY = o.upperY = 0.5 * h),
                  o.addChild(o.upper),
                  n.useReflection &&
                    ((i.width = l),
                    (i.height = h),
                    (o.upperInnerRef = new e(i, l, h)),
                    o.upper.addChild(o.upperInnerRef),
                    (o.upperInnerRef.translateY = 0.5 * h + n.refDistance),
                    (i.style.boxSizing = "border-box"),
                    (i.style.borderRadius = r.style.borderRadius)),
                  o.onLoadCallback.call(o);
              }),
                document.body.appendChild(r);
            } else {
              var l = this.gal.dopt.markupWidth,
                h = this.gal.dopt.markupHeight,
                d = i.markup;
              (d.style.width = l + "px"), (d.style.height = h + "px");
              var c,
                u = h;
              if (n.useReflection) {
                document.body.appendChild(d),
                  (d.style.marginLeft = "-1000px"),
                  html2canvas(d).then(function (t) {
                    document.body.removeChild(d),
                      (d.style.marginLeft = 0),
                      (c = s.createReflection(t, n.refParams)),
                      (o.upperInner = new e(d, l, h)),
                      o.upper.addChild(o.upperInner),
                      (o.upperInner.translateY = 0.5 * -u),
                      (o.upper.translateY = o.upperY = 0.5 * u),
                      o.addChild(o.upper),
                      (c.width = l),
                      (c.height = h),
                      (o.upperInnerRef = new e(c, l, h)),
                      o.upper.addChild(o.upperInnerRef),
                      (o.upperInnerRef.translateY = 0.5 * u + n.refDistance),
                      o.onLoadCallback.call(o);
                  });
              } else
                (o.upperInner = new e(d, l, h)),
                  o.upper.addChild(o.upperInner),
                  (o.upperInner.translateY = 0.5 * -u),
                  (o.upper.translateY = o.upperY = 0.5 * u),
                  o.addChild(o.upper),
                  setTimeout(function () {
                    o.onLoadCallback.call(o);
                  }, 20);
            }
            this._alpha = 1;
          }),
          (n.prototype.setPosition = function (t) {
            var e = this.gal.dopt,
              i = e.shiftDistance,
              s = (-e.viewAngleX * Math.PI) / 180,
              n = Math.sin(s) * (e.carouselRadius + i),
              o = Math.cos(s) * (e.carouselRadius + i),
              r = Math.sin(e.anglePer * this.index) * o,
              a = Math.cos(e.anglePer * this.index) * o;
            anime.remove(this),
              this.index === t
                ? (0 != n && (this.enableRef = !1),
                  anime({
                    targets: this,
                    translateZ: a,
                    translateX: r,
                    translateY: -n,
                    rotateZ: -e.viewAngleZ,
                    rotateX: -e.viewAngleX,
                    rotateY: this.targetRotY0,
                    easing: "easeOutQuad",
                    duration: 1e3,
                  }))
                : ((this.enableRef = !0),
                  anime({
                    targets: this,
                    rotateY: this.targetRotY,
                    rotateZ: 0,
                    rotateX: 0,
                    translateZ: this.targetZ,
                    translateX: this.targetX,
                    translateY: 0,
                    easing: "easeOutQuad",
                    duration: 1e3,
                  }));
          }),
          (n.prototype.scaleOut = function () {
            anime.remove(this),
              anime({
                targets: this,
                scale: 0,
                duration: 1e3,
                easing: "easeOutQuint",
              });
          }),
          (n.prototype.setTargetValues = function (t) {
            (this.targetZ = t.targetZ),
              (this.targetX = t.targetX),
              (this.targetRotY0 = t.targetRotY0),
              (this.targetRotY = t.targetRotY);
          }),
          (n.prototype.reset = function () {
            this.enableRef = !0;
          }),
          (n.prototype.destroy = function () {
            this.element.item = null;
          }),
          n
        );
      }
    ),
    i("rs/css3d/Environment3D", ["rs/css3d/Container3D"], function (t) {
      "use strict";
      function e(t, e, i) {
        this.init(t, e, i);
      }
      return (
        (e.prototype = Object.create(t.prototype)),
        (e.prototype.constructor = e),
        (e.prototype.init = function (e, i, s) {
          t.prototype.init.call(this),
            (this.scene = e),
            (this.oX = i),
            (this.oY = s),
            this.element.setAttribute("class", "rs3denv"),
            (this.style.zIndex = "1"),
            (this.style.top = s),
            (this.style.left = i);
        }),
        (e.prototype.toString = function () {
          return "Environment3D";
        }),
        (e.prototype.selfAlign = function () {
          t.prototype.selfAlign.call(this),
            (this.style.top = this.oY),
            (this.style.left = this.oX);
        }),
        e
      );
    }),
    i(
      "rs/css3d/Scene3D",
      ["rs/css3d/Environment3D", "rs/utils/BrowserUtil"],
      function (t, e) {
        "use strict";
        function i(t, e) {
          this.init(t, e);
        }
        var s = e.getPrefix(),
          n = "Webkit" === s ? "" : "px";
        return (
          (i.prototype.env = null),
          (i.prototype.init = function (i, o) {
            void 0 === i && (i = "50%"),
              void 0 === o && (o = "50%"),
              (this.element = document.createElement("div")),
              (this.style = this.element.style),
              this.element.setAttribute("class", "scene3d"),
              e.css(this.element, { position: "absolute", overflow: "hidden" }),
              (this.style.width = this.style.height = "100%"),
              (this.style[s + "Perspective"] = 1e3 + n),
              (this.style[s + "PerspectiveOrigin"] = i + " " + o),
              (this.env = new t(this, i, o)),
              this.element.appendChild(this.env.element);
          }),
          (i.prototype.resetPerspectiveOrigin = function () {}),
          (i.prototype.resize = function (t, e) {}),
          (i.prototype.toString = function () {
            return "Scene3D";
          }),
          i
        );
      }
    ),
    i(
      "rs/cs3d/Gallery3d",
      [
        "rs/cs3d/Gallery3dItem",
        "rs/css3d/Container3D",
        "rs/css3d/Scene3D",
        "rs/utils/Tween",
        "rs/utils/ObjectUtil",
        "rs/utils/BrowserUtil",
      ],
      function (t, e, i, s, n, o) {
        "use strict";
        function r(t, e) {
          (this.dopt = e),
            (this.cidx = 0),
            (this.data = t),
            (this.catRef = []),
            this.buildScene();
        }
        var a = o.getPrefix(),
          l = "cubic-bezier(0.00, 0.00, 0.4, 1)";
        return (
          (r.prototype.buildScene = function () {
            var t = this.dopt.origins;
            (this.scene = new i(t[0] + "%", t[1] + "%")),
              (this.el = this.scene.element),
              (this.scene.element.style[a + "UserSelect"] = "none"),
              (this.container = new e()),
              (this.container.translateZ = 0),
              this.scene.env.addChild(this.container);
          }),
          (r.prototype.target = function (t) {
            var e = this.catRef[this.ccidx];
            if (
              (this.dopt.loop &&
                (t < 0 && (t += e.length), t >= e.length && (t -= e.length)),
              t >= 0 && t < this.data[this.ccidx].items.length)
            ) {
              var i = this.dopt,
                n = (Math.PI, e.length, 360 / e.length),
                o = 0.5 * e.length,
                r = t - this.cidx;
              Math.abs(r) > o && (r < 0 ? (r += e.length) : (r -= e.length)),
                (this.targetRotY += r * n),
                new s(
                  this.container,
                  {
                    translateZ: -1e3,
                    rotateX: i.viewAngleX,
                    rotateY: -this.targetRotY,
                  },
                  i.duration / 1e3,
                  l
                ),
                (this.cidx = t);
              for (var a = 0; a < e.length; a++) {
                e[a].setPosition(t);
              }
            }
          }),
          (r.prototype.removeAll = function () {
            for (var t = this.catRef[this.ccidx], e = 0; e < t.length; e++)
              this.container.removeChild(t[e]);
          }),
          (r.prototype.addAll = function (t) {
            var e = this.catRef[t];
            if (void 0 !== e)
              for (var i = 0; i < e.length; i++) this.container.addChild(e[i]);
          }),
          (r.prototype.buildGallery = function (e, i, s) {
            var n = (this.dopt, []);
            this.catRef[e] = n;
            var o = (i.name, i.items);
            this.container.hidden = !0;
            for (var r = 0; r < o.length; r++) {
              var a = new t(o[r], this, s);
              this.container.addChild(a), n.push(a);
            }
          }),
          (r.prototype.sort = function () {
            var t = this.catRef[this.ccidx];
            t.sort(function (t, e) {
              return t.width - e.width;
            }),
              t.forEach(function (t, e) {
                t.index = e;
              });
          }),
          (r.prototype.open = function (t) {
            var e = this.dopt,
              i = this.catRef[this.ccidx],
              n = this,
              o = (e.openDuration, (2 * Math.PI) / i.length),
              r = 360 / i.length;
            e.anglePer = o;
            for (var a = 0; a < i.length; a++)
              i[a].setTargetValues({
                targetZ: Math.cos(o * a) * e.carouselRadius,
                targetX: Math.sin(o * a) * e.carouselRadius,
                targetRotY0: a * r,
                targetRotY: a * r + 90,
              }),
                (i[a].translateY = 0),
                (i[a].translateZ = 0),
                (i[a].translateX = 0),
                (i[a].rotateY = a * r + 90),
                (i[a].scale = 1),
                i[a].setPosition(0);
            (this.container.rotateX = 0),
              (this.container.rotateZ = 0),
              (this.container.rotateY = 90),
              (this.container.hidden = !1),
              (this.targetRotY = 0),
              new s(
                this.container,
                {
                  translateZ: this.getDefaultContainerZ(),
                  rotateX: e.viewAngleX,
                  rotateY: 0,
                },
                e.openDuration / 1e3,
                l
              ),
              setTimeout(function () {
                t.call(n);
              }, e.openDuration);
          }),
          (r.prototype.close = function (t) {
            var e = this.catRef[this.ccidx];
            if (void 0 != e) {
              for (
                var i = this, n = this.dopt, o = n.closeDuration / 1e3, r = 0;
                r < e.length;
                r++
              )
                e[r].scaleOut();
              new s(
                this.container,
                {
                  translateZ: this.getDefaultContainerZ(),
                  rotateX: 0,
                  rotateY: -this.targetRotY - 180,
                },
                o,
                l
              ),
                setTimeout(function () {
                  t.call(i);
                }, n.closeDuration);
            }
          }),
          (r.prototype.getDefaultContainerZ = function () {
            for (
              var t = o.bp,
                e = ["XS", "SM", "MD", "LG", "XL", "XXL", "X3L", "X4L", "X5L"],
                i = e.length - 1;
              i >= 0 && !(window.innerWidth >= t[e[i]]);
              i--
            );
            return this.dopt.responsive[e[i]];
          }),
          (r.prototype.resize = function (t, e) {
            for (
              var i = o.bp,
                s = ["XS", "SM", "MD", "LG", "XL", "XXL", "X3L", "X4L", "X5L"],
                n = s.length - 1;
              n >= 0 && !(t >= i[s[n]]);
              n--
            );
            this.container.translateZ = this.dopt.responsive[s[n]];
          }),
          (r.prototype.destroy = function () {
            console.log("Destroy gallery");
          }),
          r
        );
      }
    ),
    i(
      "rs/cs3d/CarouselStack",
      [
        "rs/media/MediaViewer",
        "rs/media/MediaViewerEvent",
        "rs/cs3d/DataItem",
        "rs/cs3d/CarouselStackState",
        "rs/cs3d/Cs3dScrollbar",
        "rs/cs3d/ButtonNavigator",
        "rs/cs3d/ButtonList",
        "rs/cs3d/ItemDescription",
        "rs/cs3d/ItemTitle",
        "rs/ui/CProgressButton",
        "rs/ui/RingPreloader",
        "rs/cs3d/CategoryMenu",
        "rs/cs3d/HCategoryMenu",
        "rs/cs3d/FullscreenButton",
        "rs/cs3d/ZoomButton",
        "rs/utils/Tween",
        "rs/utils/ObjectUtil",
        "rs/utils/MouseUtil",
        "rs/utils/BrowserUtil",
        "rs/cs3d/Gallery2d",
        "rs/cs3d/Gallery3d",
      ],
      function (t, e, i, s, n, o, r, a, l, h, d, c, u, p, f, m, y, g, v, b, w) {
        "use strict";
        function x(t, e) {
          if (
            (v.isMobile()
              ? ((E = "touchstart"), (C = "touchend"), (L = "touchmove"))
              : ((E = "mousedown"), (C = "mouseup"), (L = "mousemove")),
            (this.defaultOptions = {
              normalHeight: 250,
              markupWidth: 300,
              markupHeight: 250,
              shiftDistance: 150,
              carouselRadius: 800,
              viewAngleX: 0,
              useReflection: !0,
              refParams: [0, 0.45, 0.5, 0.15, 0.8, 0],
              refDistance: 0,
              useButtonNavigator: !0,
              components: [0, 1, 2],
              useKeyboard: !0,
              useMousewheel: !0,
              useMouseDrag: !1,
              mouseDragSpeed: 0.05,
              mouseCam: !1,
              mouseCamAngle: 30,
              useAutoplay: !1,
              autoPlayDuration: 3e3,
              autoPlayFrontColor: "#eee",
              autoPlayBackColor: "#333",
              loop: !1,
              useDeeplink: !0,
              useFullscreen: !0,
              targetLink: "_blank",
              easing: "easeOutQuad",
              duration: 1500,
              openDuration: 2e3,
              closeDuration: 1500,
              roundCorner: 2,
              ovalShape: !1,
              borderStyle: void 0,
              itemShadow: void 0,
              force2d: !1,
              origins: [50, 40],
              categoryMenu: { horizontal: !1 },
              gal2d: {
                distance: 200,
                borderStyle: "6px solid white",
                minScale: 0.5,
                maxScale: 1,
                loop: !1,
                rangeCount: 3,
                easing: "easeOutQuad",
                duration: 2e3,
                roundCorner: 8,
                ovalShape: !1,
                itemShadow: "0px 10px 15px 5px #222",
                responsive: { XS: 0.7, SM: 0.75, MD: 0.85, LG: 1, XL: 1 },
              },
              mediaviewer: {},
              responsive: {
                XS: -1300,
                SM: -1250,
                MD: -1150,
                LG: -1e3,
                XL: -1e3,
                XXL: -1e3,
                X3L: -1e3,
                X4L: -800,
              },
            }),
            (e = e || {}),
            y.merge(e, this.defaultOptions),
            (this.state = s.NORMAL),
            void 0 === t.firstChild)
          ) {
            (this.root = document.createElement("div")),
              (this.root.className = "rs-cs3d"),
              (this.data = t);
            for (var n = 0; n < t.length; n++)
              for (var o = t[n].items, r = 0; r < o.length; r++) {
                var a = o[r];
                a.index = r;
                var l = new i(this, a);
                o[r] = l;
              }
          } else (this.root = t), (this.data = this.parse(t));
          (this.root.style.position = "relative"),
            this.initComponents(),
            this.loadCategory(0);
          var h = this;
          window.addEventListener("resize", function (t) {
            h.resize();
          }),
            (this.root.style.display = "block");
        }
        var E,
          C,
          L,
          S = v.getPrefix();
        return (
          (x.prototype.initComponents = function () {
            function t(t) {
              e.loadCategory(t);
            }
            var e = this,
              i = this.defaultOptions;
            i.categoryMenu.horizontal
              ? (this.categoryMenu = new u(this.data, t))
              : (this.categoryMenu = new c(this.data, t)),
              this.root.appendChild(this.categoryMenu.el),
              "ms" === S || i.force2d
                ? ((i.gal2d.origins = i.origins),
                  (this.gal = new b(this.data, i.gal2d)),
                  (this.is2d = !0))
                : (this.gal = new w(this.data, i)),
              this.root.appendChild(this.gal.el),
              (this.cc = document.createElement("div")),
              (this.cc.className = "rs-cs3d-ccontainer"),
              this.root.appendChild(this.cc),
              (function () {
                var t = [];
                i.components.forEach(function (i) {
                  if (void 0 === t[i])
                    switch (((t[i] = 1), i)) {
                      case 0:
                        e.initButtonList();
                        break;
                      case 1:
                        (e.itemTitle = new l()),
                          e.cc.appendChild(e.itemTitle.el);
                        break;
                      case 2:
                        (e.itemDes = new a()), e.cc.appendChild(e.itemDes.el);
                        break;
                      case 3:
                        var s = { steps: 20 };
                        (e.psb = new n(s, function (t) {
                          var i = Math.floor(
                            t * e.data[e.gal.ccidx].items.length
                          );
                          i !== e.gal.cidx && e.target(i);
                        })),
                          e.cc.appendChild(e.psb.el);
                    }
                });
              })(),
              (this.sbc = document.createElement("div")),
              (this.sbc.className = ""),
              this.root.appendChild(this.sbc),
              i.useAutoplay && this.initAutoplay(),
              i.useFullscreen && this.initFullcreen(),
              this.initZoom(),
              i.useButtonNavigator && this.initButtonNavigator(),
              this.initPreloader(),
              i.useMousewheel && this.initMousewheel(),
              i.useMouseDrag && this.initMouseDrag(),
              i.mouseCam && this.initMouseCam(),
              i.useKeyboard && this.initKeyboard(),
              this.initMediaViewer();
          }),
          (x.prototype.initMediaViewer = function () {
            var i = this;
            (this.mviewer = new t(this.data, this.defaultOptions.mediaviewer)),
              this.mviewer.addEventListener(e.EXIT, function () {
                (i.state = s.NORMAL),
                  i.defaultOptions.useAutoplay && i.startAutoplay();
              });
          }),
          (x.prototype.initZoom = function () {
            var t = this;
            (this.zbtn = new f(this)),
              this.zbtn.el.addEventListener("click", function (e) {
                t.target(t.gal.cidx, !0);
              }),
              this.root.appendChild(this.zbtn.el),
              this.zbtn.hide();
          }),
          (x.prototype.initAutoplay = function () {
            var t = this.defaultOptions;
            (t.loop = !0),
              (this.cpb = new h({
                radius: 20,
                duration: t.autoPlayDuration,
                lineWidth: 4,
                frontColor: t.autoPlayFrontColor,
                backColor: t.autoPlayBackColor,
              })),
              this.cpb.el.classList.add("rs-cs3d-ap"),
              this.sbc.appendChild(this.cpb.el);
            var e = this,
              i = this.cpb;
            i.el.addEventListener("click", function (t) {
              i.playing ? e.startAutoplay() : e.stopAutoplay();
            });
          }),
          (x.prototype.initFullcreen = function () {
            (this.fsbtn = new p(this.root, function (t) {
              console.log("fullsceen change");
            })),
              this.sbc.appendChild(this.fsbtn.el),
              this.cpb
                ? (this.fsbtn.el.style.top = "70px")
                : (this.fsbtn.el.style.right = "5px");
          }),
          (x.prototype.initButtonNavigator = function () {
            function t(t) {
              i.prev();
            }
            function e(t) {
              i.next();
            }
            var i = this;
            (this.bnav = new o(t, e)),
              this.root.appendChild(this.bnav.lBtn),
              this.root.appendChild(this.bnav.rBtn),
              this.bnav.hideAll(),
              this.bnav.reAlign(this.defaultOptions.origins);
          }),
          (x.prototype.initPreloader = function () {
            var t = new d({ borderColor: "#ccc" }),
              e = t.el;
            (this.preloader = e),
              (e.style.top = this.defaultOptions.origins[1] + "%");
          }),
          (x.prototype.initMousewheel = function () {
            function t(t) {
              e.target(e.gal.cidx - t);
            }
            var e = this;
            g.startMouseWheel(this.root, t);
          }),
          (x.prototype.initMouseDrag = function () {
            function t(t) {
              a.itemMouseOver ||
                ((r = t.touches ? t.touches[0].clientX : t.clientX),
                (s = r),
                (o = n = a.gal.cidx),
                (l.style.cursor = "grabbing"),
                window.addEventListener(L, i));
            }
            function e(t) {
              (l.style.cursor = "grab"), window.removeEventListener(L, i);
            }
            function i(t) {
              r = t.changedTouches ? t.changedTouches[0].clientX : t.clientX;
              var e = n - Math.floor((r - s) * h);
              e !== o && ((o = e), a.target(e));
            }
            var s,
              n,
              o,
              r,
              a = this,
              l = this.gal.el,
              h = this.defaultOptions.mouseDragSpeed;
            (l.style.cursor = "grab"),
              l.addEventListener(E, t),
              window.addEventListener(C, e);
          }),
          (x.prototype.initMouseCam = function () {
            function t(t) {
              if (!i.isLoading) {
                var e = i.root.getBoundingClientRect();
                s = ((t.clientY - e.top) / e.height - 0.5) * o;
              }
            }
            function e() {
              var t = (-s - r.rotateX) * a;
              t && (r.rotateX += t), (n = requestAnimationFrame(e));
            }
            var i = this;
            if (!0 !== i.is2d) {
              var s,
                n,
                o = i.defaultOptions.mouseCamAngle,
                r = i.gal.scene.env,
                a = 0.2;
              this.root.addEventListener("mousemove", t, !0), e();
            }
          }),
          (x.prototype.initKeyboard = function () {
            var t = this;
            window.addEventListener("keyup", function (e) {
              if (t.state === s.NORMAL)
                switch (String(e.keyCode)) {
                  case "39":
                    t.next(), e.preventDefault();
                    break;
                  case "37":
                    t.prev(), e.preventDefault();
                    break;
                  case "27":
                    e.preventDefault();
                }
            });
          }),
          (x.prototype.initButtonList = function () {
            function t(t) {
              e.target(t);
            }
            var e = this;
            (this.defaultOptions.useButtonList = !0),
              (this.blist = new r(t)),
              this.cc.appendChild(this.blist.el),
              this.blist.hide();
          }),
          (x.prototype.parse = function (t) {
            for (var e = [], s = this, n = t.firstElementChild; null != n; ) {
              var o = [];
              !(function (t, e) {
                for (
                  var n = t.getElementsByTagName("li"),
                    o = t.dataset.markup,
                    r = 0;
                  r < n.length;
                  r++
                ) {
                  var a,
                    l = n[r],
                    h = l.getElementsByTagName("p")[0];
                  if (o) {
                    var d = l.getElementsByClassName("markup-item")[0],
                      c = d.nextElementSibling;
                    a = {
                      description: void 0 === c ? "" : c.innerHTML,
                      markup: d,
                      index: r,
                    };
                  } else {
                    var u = l.getElementsByTagName("a")[0];
                    if (
                      ((a = {
                        title: u.title,
                        content: u.innerHTML,
                        description: void 0 === h ? "" : h.innerHTML,
                        src: u.href,
                        index: r,
                      }),
                      u.dataset)
                    )
                      if (
                        ((a.type = u.dataset.type),
                        (a.thumbnail = u.dataset.thumbnail),
                        (a.link = u.dataset.link),
                        "video" == a.type)
                      )
                        if (
                          (u.dataset.poster && (a.poster = u.dataset.poster),
                          "[" == u.dataset.extended[0])
                        ) {
                          var p = u.dataset.extended.replace(/'/g, '"');
                          a.extended = JSON.parse(p);
                        } else a.extended = u.dataset.extended;
                      else a.extended = u.dataset.extended;
                  }
                  var f = new i(s, a);
                  e.push(f);
                }
              })(n, o),
                e.push({ name: n.dataset.name, items: o }),
                t.removeChild(n),
                (n = t.firstElementChild);
            }
            return e;
          }),
          (x.prototype.loadCategory = function (t) {
            function e() {
              (r.ccidx = t),
                (r.cidx = 0),
                n.autoSorted && !o.is2d && r.sort(),
                o.showComponents(),
                o.root.dispatchEvent(
                  new CustomEvent("cloadcomplete", { detail: t })
                );
            }
            function i() {
              var i = this;
              this.element.addEventListener("click", function (t) {
                o.target(i.index, !0);
              }),
                this.element.addEventListener("mouseover", function (t) {
                  (o.itemMouseOver = !0),
                    i.index === o.gal.cidx &&
                      (o.isLoading ||
                        o.state === s.DRAGGING ||
                        ((o.hasExtended(i.index) || o.hasLink(i.index)) &&
                          (anime.remove(o.zbtn.el), o.zbtn.show())));
                }),
                this.element.addEventListener("mouseout", function (t) {
                  (o.itemMouseOver = !1),
                    i.index === o.gal.cidx &&
                      anime({
                        targets: o.zbtn.el,
                        duration: 1e3,
                        easing: "easeOutQuad",
                        opacity: 0,
                        complete: function () {
                          o.zbtn.hide();
                        },
                      });
                }),
                ++a == o.data[t].items.length && e();
            }
            var n = this.defaultOptions,
              o = this,
              r = this.gal;
            (this.isLoading = !0),
              this.root.dispatchEvent(new CustomEvent("cload", { detail: t })),
              this.hideComponents();
            var a = 0;
            void 0 !== r.catRef[r.ccidx]
              ? r.close(function () {
                  r.removeAll(),
                    void 0 == r.catRef[t]
                      ? (o.root.appendChild(o.preloader),
                        r.buildGallery(t, o.data[t], i))
                      : (r.addAll(t), e());
                })
              : (o.root.appendChild(o.preloader),
                r.buildGallery(t, this.data[t], i));
          }),
          (x.prototype.showComponents = function () {
            var t = this.defaultOptions,
              e = this.gal,
              i = e.catRef[e.ccidx],
              s = this;
            e.open(function () {
              t.useAutoplay && s.startAutoplay();
            }),
              this.root.contains(this.preloader) &&
                this.root.removeChild(this.preloader),
              this.categoryMenu.show(),
              t.categoryMenu.horizontal
                ? this.categoryMenu.setActive(this.gal.ccidx)
                : this.categoryMenu.setTopLabel(this.data[e.ccidx].name),
              this.showTitle(0),
              this.showDescription(0),
              this.blist &&
                (this.blist.setLength(i.length),
                this.blist.setSelected(0),
                this.blist.show()),
              this.psb && ((this.psb.steps = i.length), this.psb.show()),
              t.useButtonNavigator && this.bnav.show("right"),
              (this.sbc.style.display = "block"),
              this.resize(),
              (this.isLoading = !1);
          }),
          (x.prototype.hideComponents = function () {
            var t = this.defaultOptions;
            this.stopAutoplay(),
              this.zbtn.hide(),
              this.categoryMenu.hide(),
              this.blist && this.blist.hide(),
              this.psb && this.psb.hide(),
              t.useButtonNavigator && this.bnav.hideAll(),
              (this.sbc.style.display = "none"),
              this.itemTitle && this.itemTitle.hide(),
              this.itemDes && this.itemDes.hide();
          }),
          (x.prototype.target = function (t, e) {
            if (!this.isLoading) {
              var i = this.gal,
                n = this.defaultOptions,
                o = i.catRef[i.ccidx],
                r = this.data[i.ccidx].items;
              if (
                (n.loop &&
                  (t < 0 && (t += o.length), t >= o.length && (t -= o.length)),
                t >= 0 && t < r.length)
              ) {
                var a = this.hasLink(t);
                if (t == i.cidx && a && e && this.state == s.NORMAL)
                  return void window.open(a, n.targetLink);
                if (
                  t == i.cidx &&
                  this.hasExtended(t) &&
                  e &&
                  this.state == s.NORMAL
                )
                  return (
                    (this.state = s.EXTENDED),
                    this.defaultOptions.useAutoplay && this.stopAutoplay(),
                    v.exitFullscreen(this.root),
                    void this.targetExtended(i.ccidx + ":" + i.cidx)
                  );
                this.showTitle(t),
                  this.showDescription(t),
                  i.target(t),
                  n.useButtonNavigator &&
                    (this.bnav.showAll(),
                    n.loop ||
                      (0 == t && this.bnav.hide("left"),
                      t == o.length - 1 && this.bnav.hide("right"))),
                  this.blist && this.blist.setSelected(t),
                  this.psb && this.psb.applyValue(t / o.length),
                  this.root.dispatchEvent(
                    new CustomEvent("target", { detail: t })
                  );
              }
            }
          }),
          (x.prototype.targetExtended = function (t) {
            this.mviewer.target(t);
          }),
          (x.prototype.next = function () {
            this.target(this.gal.cidx + 1);
          }),
          (x.prototype.prev = function () {
            this.target(this.gal.cidx - 1);
          }),
          (x.prototype.startAutoplay = function () {
            this.cpb.playing || this.cpb.start();
            var t = this;
            this.apid = setInterval(function (e) {
              t.next();
            }, this.defaultOptions.autoPlayDuration);
          }),
          (x.prototype.stopAutoplay = function () {
            this.cpb && this.cpb.playing && this.cpb.stop(),
              clearInterval(this.apid);
          }),
          (x.prototype.showTitle = function (t) {
            this.itemTitle &&
              this.itemTitle.show(this.data[this.gal.ccidx].items[t].content);
          }),
          (x.prototype.showDescription = function (t) {
            this.itemDes &&
              this.itemDes.show(this.data[this.gal.ccidx].items[t].description);
          }),
          (x.prototype.resize = function () {
            this.gal.resize(window.innerWidth, window.innerHeight);
          }),
          (x.prototype.hasExtended = function (t) {
            return void 0 !== this.data[this.gal.ccidx].items[t].extendedVal;
          }),
          (x.prototype.hasLink = function (t) {
            var e = this.data[this.gal.ccidx].items[t];
            return void 0 !== e.link && e.link;
          }),
          (x.prototype.destroy = function () {
            this.gal.destroy();
          }),
          x
        );
      }
    ),
    (window.CarouselStack = e("rs/cs3d/CarouselStack")),
    (window.AudioPlayer = e("rs/media/AudioPlayer")),
    (window.VideoPlayer = e("rs/media/VideoPlayer"));
})();
